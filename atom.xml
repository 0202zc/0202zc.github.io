<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>L..z、℃的博客</title>
  
  <subtitle>Be unfazed by defeat.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://0202zc.github.io/"/>
  <updated>2020-01-24T07:21:49.632Z</updated>
  <id>http://0202zc.github.io/</id>
  
  <author>
    <name>0202zc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>删除排序数组中的重复项与移除元素</title>
    <link href="http://0202zc.github.io/2020/01/24/algorithm-remove-elements/"/>
    <id>http://0202zc.github.io/2020/01/24/algorithm-remove-elements/</id>
    <published>2020-01-24T06:54:54.000Z</published>
    <updated>2020-01-24T07:21:49.632Z</updated>
    
    <content type="html"><![CDATA[<p>LeetCode 26. Remove Duplicates from Sorted Array &amp; 27. remove elements<br><a id="more"></a></p><h3 id="删除排序数组中的重复项"><a href="#删除排序数组中的重复项" class="headerlink" title="删除排序数组中的重复项"></a>删除排序数组中的重复项</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定一个排序数组，你需要在<strong>原地</strong>删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。</p><p>不要使用额外的数组空间，你必须在<strong>原地修改输入数组</strong>并在使用$O(1)$额外空间的条件下完成。</p><h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1:"></a>示例 1:</h5><blockquote><p>给定数组 <code>nums = [1,1,2]</code>,<br>函数应该返回新的长度<code>2</code>, 并且原数组<code>nums</code>的前两个元素被修改为<code>1, 2</code>。<br>你不需要考虑数组中超出新长度后面的元素。</p></blockquote><h5 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2:"></a>示例 2:</h5><p>给定<code>nums = [0,0,1,1,1,2,2,3,3,4]</code>,</p><p>函数应该返回新的长度<code>5</code>, 并且原数组<code>nums</code>的前五个元素被修改为<code>0, 1, 2, 3, 4</code>。</p><p>你不需要考虑数组中超出新长度后面的元素。</p><h4 id="算法思路"><a href="#算法思路" class="headerlink" title="算法思路"></a>算法思路</h4><p><strong>“拷贝覆盖”</strong><br><img data-src="/images/algorithm/Remove-Elements-1.jpg" alt=""><br>如上图所示，用count来记录元素应该覆盖的步长：<br>在i位置时，</p><ul><li>若<code>nums[i] == nums[i + 1]</code>，则<code>count++</code></li><li>否则，<code>countinue</code><br><em>此处用了arr[]来记录每个元素应该移动的步长</em></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>, i;</span><br><span class="line">    <span class="keyword">if</span>(numsSize == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> arr[numsSize];</span><br><span class="line">    arr[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; numsSize; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i - <span class="number">1</span>] == nums[i]) &#123;</span><br><span class="line">             count++;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[i]=count;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i &lt; numsSize; i++)&#123;</span><br><span class="line">         nums[i - arr[i]] = nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> numsSize - count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h3><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定一个数组<code>nums</code>和一个值<code>val</code>，你需要<strong>原地</strong>移除所有数值等于<code>val</code>的元素，返回移除后数组的新长度。</p><p>不要使用额外的数组空间，你必须在<strong>原地修改输入数组</strong>并在使用$O(1)$额外空间的条件下完成。</p><p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p><h4 id="算法思路-1"><a href="#算法思路-1" class="headerlink" title="算法思路"></a>算法思路</h4><p>同样是“拷贝覆盖”<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">removeElement</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>, i;</span><br><span class="line">    <span class="keyword">if</span>(numsSize == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; numsSize; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i] == val)&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            nums[i - count] = nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> numsSize - count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;LeetCode 26. Remove Duplicates from Sorted Array &amp;amp; 27. remove elements&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://0202zc.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://0202zc.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>C语言一些要点总结</title>
    <link href="http://0202zc.github.io/2020/01/23/algorithm-something-about-C/"/>
    <id>http://0202zc.github.io/2020/01/23/algorithm-something-about-C/</id>
    <published>2020-01-23T02:39:09.000Z</published>
    <updated>2020-01-23T05:22:22.223Z</updated>
    
    <content type="html"><![CDATA[<p>复试笔试C语言一些要点<br><a id="more"></a></p><h3 id="C语言短路求值（逻辑与、逻辑或）"><a href="#C语言短路求值（逻辑与、逻辑或）" class="headerlink" title="C语言短路求值（逻辑与、逻辑或）"></a>C语言短路求值（逻辑与、逻辑或）</h3><h4 id="逻辑或的短路"><a href="#逻辑或的短路" class="headerlink" title="逻辑或的短路"></a>逻辑或的短路</h4><p>首先上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a = %d\n"</span>, a);</span><br><span class="line">    <span class="number">1</span> || (a = <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a = %d\n"</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运⾏结果如下：</p><blockquote><p>a = 1<br>a = 1</p></blockquote><p>逻辑或的表现形式如下：<br><code>expression1 || exexpression2</code></p><p>这⾥⽤到了逻辑或，由于逻辑或的短路，expression1为true，则后⾯的expression2（即：(a=0) ）不再求值，整个表达式的结果为true，所以a的值仍为1，没有改变。【即：一真为真】</p><h4 id="逻辑与的短路"><a href="#逻辑与的短路" class="headerlink" title="逻辑与的短路"></a>逻辑与的短路</h4><p>⾸先看如下代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a = %d\n"</span>, a);</span><br><span class="line">    <span class="number">0</span> &amp;&amp; (a = <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a = %d\n"</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运行结果如下：</p><blockquote><p>a = 1<br>a = 1</p></blockquote><p>逻辑与的表现形式如下：<br><code>expression1 &amp;&amp; expression2</code></p><p>上述代码中用到了逻辑与，由于逻辑与的短路，<code>expression1</code>为<code>false</code>，则后面的<code>expression2</code>不再求值，整个的结果为<code>false</code>，所以a的值没有改变。【即：一假则假】</p><h3 id="Eratosthenes筛选法"><a href="#Eratosthenes筛选法" class="headerlink" title="Eratosthenes筛选法"></a>Eratosthenes筛选法</h3><h4 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h4><p>给出要筛选数值的范围$n$，找出<code>sqrt(n)</code>以内的素数$p_1, p_2, … , p_k$。</p><ul><li>先把1删除（现今数学界1既不是质数也不是合数）</li><li>读取队列中当前最小的数2，然后把2的倍数删去</li><li>读取队列中当前最小的数3，然后把3的倍数删去</li><li>读取队列中当前最小的数5，然后把5的倍数删去</li><li>读取队列中当前最小的数7，然后把7的倍数删去</li><li>不断重复下去…直到需求的范围内所有的数均删除或读取<br>注：此处的队列并非数据结构队列，如需保留运算结果，处于存储空间的充分利用以及大量删除操作的实施，建议采用链表的数据结构。<br>【来源：百度百科】</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C Language</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 10000</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i; <span class="comment">/*i表示整数和对应的下标*/</span></span><br><span class="line"><span class="keyword">int</span> j; <span class="comment">/*j表示正要处理的质数，j之前的已处理，j之后的未处理*/</span></span><br><span class="line"><span class="keyword">int</span> k; <span class="comment">/*k表示正在处理的j的倍数从2开始到j*k&lt;SIZE*/</span></span><br><span class="line"><span class="keyword">int</span> a[SIZE]; <span class="comment">/*下标表示整数内容判断是否为质数*/</span></span><br><span class="line"><span class="keyword">int</span> *p; <span class="comment">/*控制循环*/</span></span><br><span class="line"><span class="keyword">for</span>(p = a; p &lt; a+SIZE; ++p) &#123; <span class="comment">/*初始化数组全是TRUE*/</span></span><br><span class="line">*p = TRUE;</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">0</span>] = a[<span class="number">1</span>] = FALSE; <span class="comment">/*设置前面两个是不是质数的数的状态为FALSE，即0和1不是质数*/</span></span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt; SIZE) &#123; <span class="comment">/*找到下一个质数*/</span></span><br><span class="line"><span class="keyword">while</span>(a[i++] == TRUE) &#123;</span><br><span class="line">j = i<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(k = <span class="number">2</span>; j*k &lt; SIZE &amp;&amp; i &lt; SIZE; ++k) &#123; <span class="comment">/*处理质数的倍数*/</span></span><br><span class="line">a[j*k] = FALSE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(p = a; p &lt; a+SIZE; ++p) &#123; <span class="comment">/*打印出质数*/</span></span><br><span class="line"><span class="keyword">if</span>(*p == TRUE) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%8d"</span>, p-a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">countPrimes</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; vec_flag(n, <span class="literal">true</span>);</span><br><span class="line">    vec_flag[<span class="number">0</span>] = <span class="literal">false</span>;</span><br><span class="line">    vec_flag[<span class="number">1</span>] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; <span class="built_in">sqrt</span>(n);i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(vec_flag[i])&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i * i; j &lt; n; j += i) &#123;</span><br><span class="line">                vec_flag[j] = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count(vec_flag.begin(), vec_flag.end(), <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_int_iter</span><span class="params">()</span>:</span><span class="comment">#生成器生成从3开始的无限奇数序列</span></span><br><span class="line">    n = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        n = n + <span class="number">2</span></span><br><span class="line">        <span class="keyword">yield</span> n</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span>  <span class="title">_not_divisible</span><span class="params">(n)</span>:</span><span class="comment">#定义筛选函数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span> x:x % n &gt; <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">primes</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span>          <span class="comment">#先返回一个2</span></span><br><span class="line">    it = _int_iter() <span class="comment"># 初始序列</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        n = next(it) <span class="comment"># 返回序列的第一个数</span></span><br><span class="line">        <span class="keyword">yield</span> n</span><br><span class="line">        it = filter(_not_divisible(n), it) <span class="comment"># 构造新序列</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> primes():<span class="comment">#构造循环条件，使之可以输出任何范围的素数序列</span></span><br><span class="line">    <span class="keyword">if</span> n &lt; <span class="number">1000</span>:</span><br><span class="line">        print(n)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="关于void"><a href="#关于void" class="headerlink" title="关于void *"></a>关于void *</h3><h4 id="void的含义"><a href="#void的含义" class="headerlink" title="void的含义"></a>void的含义</h4><p><code>void</code>即“无类型”，<code>void *</code>则为“无类型指针”，可以指向任何数据类型</p><h4 id="void指针的使用规范"><a href="#void指针的使用规范" class="headerlink" title="void指针的使用规范"></a>void指针的使用规范</h4><ul><li><code>void</code>指针可以指向任意类型的数据，亦即可用任意数据类型的指针对<code>void</code>指针赋值。例如：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *p_int;</span><br><span class="line"><span class="keyword">void</span> *p_void;</span><br><span class="line">p_void = p_int; <span class="comment">/*但是不能 p_int = p_void*/</span></span><br></pre></td></tr></table></figure></li></ul><p>如果要将<code>p_void</code>赋给其他类型指针，则需要强制类型转换如：<code>p_int = (int *)p_void;</code></p><ul><li>在ANSIC标准中，不允许对<code>void</code>指针进⾏算术运算如<code>p_void++</code>或<code>p_void += 1</code>等，⽽在GNU中则允许。因为在缺省情况下，GNU认为<code>void *</code>与<code>char *</code>⼀样。<code>sizeof(*pvoid ) == sizeof(char)</code>.</li><li>由于<code>void</code>指针可以指向任意类型的数据，亦即可⽤任意数据类型的指针对<code>void</code>指针赋值，因此还可以⽤<code>void</code>指针来作为函数形参，这样函数就可以接受任意数据类型的指针作为参数。例如：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memcpy</span><span class="params">(<span class="keyword">void</span> *dest, <span class="keyword">const</span> <span class="keyword">void</span> *src, <span class="keyword">size_t</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memset</span><span class="params">(<span class="keyword">void</span> *buffer, <span class="keyword">int</span> c, <span class="keyword">size_t</span> num)</span></span>;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;复试笔试C语言一些要点&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://0202zc.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://0202zc.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="C/C++" scheme="http://0202zc.github.io/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>寻找旋转排序数组中的最小值</title>
    <link href="http://0202zc.github.io/2020/01/22/algorithm-Find-Minimum-in-Rotated-Sorted-Array/"/>
    <id>http://0202zc.github.io/2020/01/22/algorithm-Find-Minimum-in-Rotated-Sorted-Array/</id>
    <published>2020-01-22T03:21:36.000Z</published>
    <updated>2020-01-22T13:16:55.066Z</updated>
    
    <content type="html"><![CDATA[<p>LeetCode上的一道题目：153. 寻找旋转排序数组中的最小值<br><a id="more"></a><br>来源：<br><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/solution/xun-zhao-xuan-zhuan-pai-lie-shu-zu-zhong-de-zui-xi/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/solution/xun-zhao-xuan-zhuan-pai-lie-shu-zu-zhong-de-zui-xi/</a></p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote><p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。<br>( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。<br>请找出其中最小的元素。<br>你可以假设数组中不存在重复元素。</p></blockquote><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1:"></a>示例 1:</h4><blockquote><p>输入: [3,4,5,1,2]<br>输出: 1</p></blockquote><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h4><blockquote><p>输入: [4,5,6,7,0,1,2]<br>输出: 0</p></blockquote><h3 id="方法：二分查找"><a href="#方法：二分查找" class="headerlink" title="方法：二分查找"></a>方法：二分查找</h3><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>一种暴力的解法是搜索整个数组，找到其中的最小元素，这样的时间复杂度是 $O(N)$ 其中 $N$ 是给定数组的大小。</p><p>一个非常棒的解决该问题的办法是使用<code>二分搜索</code>。在二分搜索中，我们找到区间的中间点并根据某些条件决定去区间左半部分还是右半部分搜索。</p><p>由于给定的数组是有序的，我们就可以使用二分搜索。然而，数组被旋转了，所以简单的使用二分搜索并不可行。</p><p>我们希望找到旋转排序数组的最小值，如果数组没有被旋转呢？如何检验这一点呢？</p><p>如果数组没有被旋转，是升序排列，就满足 <code>last element &gt; first element</code>。</p><p><img data-src="/images/algorithm/Find-Minimum-in-Rotated-Sorted-Array-1.png" alt=""></p><p>上图例子中 <code>7&gt;2</code> 。说明数组仍然是有序的，没有被旋转。</p><p><img data-src="/images/algorithm/Find-Minimum-in-Rotated-Sorted-Array-2.png" alt=""></p><p>上面的例子中 <code>3 &lt; 4</code>，因此数组旋转过了。这是因为原先的数组为 <code>[2, 3, 4, 5, 6, 7]</code>，通过旋转较小的元素 <code>[2, 3]</code> 移到了后面，也就是 [4, 5, 6, 7, <code>2, 3</code>]。因此旋转数组中第一个元素 <code>[4]</code> 变得比最后一个元素大。</p><p>这意味着在数组中你会发现一个变化的点，这个点会帮助我们解决这个问题，我们称其为<code>变化点</code>。</p><p><img data-src="/images/algorithm/Find-Minimum-in-Rotated-Sorted-Array-3.png" alt=""></p><p>在这个改进版本的二分搜索算法中，我们需要找到这个点。下面是关于<code>变化点</code>的特点：</p><blockquote><p>所有变化点左侧元素 &gt; 数组第一个元素<br>所有变化点右侧元素 &lt; 数组第一个元素</p></blockquote><h4 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h4><ol><li><p>找到数组的中间元素<code>mid</code>。</p></li><li><p>如果<code>中间元素 &gt; 数组第一个元素</code>，我们需要在<code>mid</code>右边搜索变化点。</p></li><li><p>如果<code>中间元素 &lt; 数组第一个元素</code>，我们需要在<code>mid</code>做边搜索变化点。</p></li></ol><p><img data-src="/images/algorithm/Find-Minimum-in-Rotated-Sorted-Array-4.png" alt=""></p><p>上面的例子中，中间元素<code>6</code>比第一个元素<code>4</code>大，因此在中间点右侧继续搜索。</p><ol start="4"><li><p>当我们找到变化点时停止搜索，当以下条件满足任意一个即可：<br><code>nums[mid] &gt; nums[mid + 1]</code>，因此<strong>mid+1</strong>是最小值。</p><p><code>nums[mid - 1] &gt; nums[mid]</code>，因此<strong>mid</strong>是最小值。</p></li></ol><p><img data-src="/images/algorithm/Find-Minimum-in-Rotated-Sorted-Array-5.png" alt=""></p><p>在上面的例子中，标记左右区间端点。中间元素为<code>2</code>，之后的元素是<code>7</code>满足<code>7 &gt; 2</code>也就是<code>nums[mid - 1] &gt; nums[mid]</code>。因此找到变化点也就是最小元素为<code>2</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// If the list has just one element then return that element.</span></span><br><span class="line">    <span class="keyword">if</span> (nums.length == <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// initializing left and right pointers.</span></span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if the last element is greater than the first element then there is no rotation.</span></span><br><span class="line">    <span class="comment">// e.g. 1 &lt; 2 &lt; 3 &lt; 4 &lt; 5 &lt; 7. Already sorted array.</span></span><br><span class="line">    <span class="comment">// Hence the smallest element is first element. A[0]</span></span><br><span class="line">    <span class="keyword">if</span> (nums[right] &gt; nums[<span class="number">0</span>]) &#123;</span><br><span class="line">      <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Binary search way</span></span><br><span class="line">    <span class="keyword">while</span> (right &gt;= left) &#123;</span><br><span class="line">      <span class="comment">// Find the mid element</span></span><br><span class="line">      <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// if the mid element is greater than its next element then mid+1 element is the smallest</span></span><br><span class="line">      <span class="comment">// This point would be the point of change. From higher to lower value.</span></span><br><span class="line">      <span class="keyword">if</span> (nums[mid] &gt; nums[mid + <span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> nums[mid + <span class="number">1</span>];</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// if the mid element is lesser than its previous element then mid element is the smallest</span></span><br><span class="line">      <span class="keyword">if</span> (nums[mid - <span class="number">1</span>] &gt; nums[mid]) &#123;</span><br><span class="line">        <span class="keyword">return</span> nums[mid];</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// if the mid elements value is greater than the 0th element this means</span></span><br><span class="line">      <span class="comment">// the least value is still somewhere to the right as we are still dealing with elements</span></span><br><span class="line">      <span class="comment">// greater than nums[0]</span></span><br><span class="line">      <span class="keyword">if</span> (nums[mid] &gt; nums[<span class="number">0</span>]) &#123;</span><br><span class="line">        left = mid + <span class="number">1</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// if nums[0] is greater than the mid value then this means the smallest value is somewhere to</span></span><br><span class="line">        <span class="comment">// the left</span></span><br><span class="line">        right = mid - <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="时间复杂度分析"><a href="#时间复杂度分析" class="headerlink" title="时间复杂度分析"></a>时间复杂度分析</h5><ul><li>时间复杂度：和二分搜索一样$O(logN)$</li><li>空间复杂度：$O(1)$</li></ul><h5 id="或者"><a href="#或者" class="headerlink" title="或者"></a>或者</h5><ol><li><p>判断最小的数是否在第一个位置，若是则返回<code>nums[0]</code>；</p></li><li><p>否则，选取中间位置mid的数和right位置的数进行比较，若<code>nums[mid] &lt; nums[r]</code>，说明最小的数在mid之前，<code>right = mid</code>；反之，令<code>left = mid + 1</code>；</p></li><li><p>重复进行，直到<code>left &gt;= right</code>。</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//伪代码</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="keyword">int</span> *nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.length - <span class="number">1</span>, mid;</span><br><span class="line">    <span class="keyword">if</span>(nums[left] &lt; nums[right])</span><br><span class="line">        <span class="keyword">return</span> nums[left];</span><br><span class="line">    <span class="keyword">while</span>(left &lt; right) &#123;</span><br><span class="line">        mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums[mid] &gt; nums[right])</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            right = mid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;LeetCode上的一道题目：153. 寻找旋转排序数组中的最小值&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://0202zc.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://0202zc.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>最小公倍数&amp;最大公因数</title>
    <link href="http://0202zc.github.io/2020/01/21/algorithm-LCM&amp;GCD/"/>
    <id>http://0202zc.github.io/2020/01/21/algorithm-LCM&amp;GCD/</id>
    <published>2020-01-21T03:08:28.000Z</published>
    <updated>2020-01-21T03:51:43.300Z</updated>
    
    <content type="html"><![CDATA[<p>几个数共有的倍数叫做这几个数的公倍数，其中除0以外最小的一个公倍数，叫做这几个数的最小公倍数。如果数a能被数b整除，a就叫做b的倍数，b就叫做a的约数。约数和倍数都表示一个整数与另一个整数的关系，不能单独存在。<br><a id="more"></a></p><h3 id="求最大公因数算法"><a href="#求最大公因数算法" class="headerlink" title="求最大公因数算法"></a>求最大公因数算法</h3><p>求最大公约数有多种方法，常见的有<strong>质因数分解法</strong>、<strong>短除法</strong>、<strong>辗转相除法</strong>、<strong>更相减损法</strong>。<br>下面介绍辗转相除法（欧几里德算法）</p><blockquote><p>有两整数a和b：<br>① a%b得余数temp<br>② 若temp=0，则b即为两数的最大公因数<br>③ 若temp≠0，则令a=b，b=temp，再回去执行①</p></blockquote><p>例如，求27和15的最大公因数过程为：</p><blockquote><p>27÷15=1 余12<br>15÷12=1 余3<br>12÷3=4 余0<br>因此，3即为最大公因数</p></blockquote><h4 id="代码实现如下："><a href="#代码实现如下：" class="headerlink" title="代码实现如下："></a>代码实现如下：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//求a，b的最大公因数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GCD</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        temp = a % b;</span><br><span class="line">        <span class="keyword">if</span>(temp == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> b;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            a = b;</span><br><span class="line">            b = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(temp != <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求最小公倍数算法"><a href="#求最小公倍数算法" class="headerlink" title="求最小公倍数算法"></a>求最小公倍数算法</h3><blockquote><p><strong>最小公倍数 = 两整数的乘积 ÷ 最大公约数</strong></p></blockquote><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//求m和n的最小公倍数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCM</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y, c;</span><br><span class="line">    x = m; y = n;</span><br><span class="line">    <span class="keyword">while</span>(m != <span class="number">0</span>) &#123;</span><br><span class="line">        c = n % m;</span><br><span class="line">        n = m;</span><br><span class="line">        m = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (x * y / n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;几个数共有的倍数叫做这几个数的公倍数，其中除0以外最小的一个公倍数，叫做这几个数的最小公倍数。如果数a能被数b整除，a就叫做b的倍数，b就叫做a的约数。约数和倍数都表示一个整数与另一个整数的关系，不能单独存在。&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://0202zc.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://0202zc.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>文件分配方式之索引分配</title>
    <link href="http://0202zc.github.io/2020/01/20/os-index-assignment/"/>
    <id>http://0202zc.github.io/2020/01/20/os-index-assignment/</id>
    <published>2020-01-20T03:14:05.000Z</published>
    <updated>2020-01-21T04:46:50.010Z</updated>
    
    <content type="html"><![CDATA[<p>磁盘空间分配的主要常用方法有三个：<strong>连续分配</strong>、<strong>链接分配</strong>和<strong>索引分配</strong>。本文主要讨论<strong>索引分配中处理索引块大小</strong>的问题。<br><a id="more"></a><br>文件实际上是一种抽象数据类型，文件的实现就是研究文件的物理结构，即文件数据在物理存储设备上是如何分布和组织的。同一个问题有两个方面的回答：一是文件的<strong>分配方式</strong>，讲的是对磁盘<u>非空闲块</u>的管理；二是文件<strong>存储空间管理</strong>，将的是对磁盘<u>空闲块</u>的管理。<br><br><br>索引分配解决了连续分配和链式分配中的许多问题。对于索引分配，每个文件在文件分配表中有一个一级索引，索引包含分配给文件的每个分区入口。典型地，文件索引在物理上并不是作为文件分配表的一部分存储的，相反，<u>文件索引保存在一个单独的块中，文件分配表中改文件的入口指向这一块。</u>分配可以基于大小固定的块，也可以基于大小可变的块。索引分配支持顺序访问和直接访问文件，因而是最普遍的一种文件分配方式。</p><p>索引分配解决了连接分配不能有效支持直接访问（FAT除外）的问题，它把每个文件的所有的盘块号都集中放在一起构成索引块（表），如下图所示。</p><p><img data-src="http://c.biancheng.net/uploads/allimg/181112/2-1Q112104520B6.gif" alt="" title="磁盘空间的索引分配【来源：C语言中文网 http://c.biancheng.net/view/1302.html】"></p><p>每个文件都有其索引块，这是一个磁盘块地址的数组。索引表记录了文件的<strong>各个逻辑块对应的物理块</strong>。索引块的第i个条目指向文件的第i个块。目录条目包括索引块的地址。要读第i块，通过索引块的第i个条目的指针来查找和读入所需的块。<br>创建文件时，索引块的所有项目都设为空。首次写入第i块时，先从空闲空间中取得一个块，再将其地址写到索引块的第i个条目。<strong>索引分配支持直接访问（随机访问），且没有外部碎片的问题，易于文件拓展</strong>。其缺点是由于索引块的分配，增加了系统存储空间的开销。索引块的大小是一个重要的问题，每个文件必须有一个索引块，因此需要索引块尽可能小，但索引块太小就无法支持大文件。可采用以下机制来处理这个问题。</p><ol><li>链接方案</li></ol><ul><li><strong>一个块通常为一个磁盘块</strong>，因此它本身能直接读写。为了处理大文件，可以将多个索引块链接起来。</li></ul><ol start="2"><li>多层索引：使第一层索引块指向第二层索引块，第二层文件块指向文件块。根据实际要求可以继续到第三层或第四层。</li></ol><ul><li>最大文件长度 = 每层索引项个数之积 × 单个文件大小；</li><li>每层索引表最大不能超过一个磁盘块大小；</li><li>K层索引，顶级索引表<strong>未调入内存</strong>，则访问K级索引需要<u>K+1</u>次读磁盘。<br>【注：文件分配方式之链接分配的隐式分配，读入i号逻辑块，总共需要i+1次读磁盘I/O操作】</li></ul><ol start="3"><li>混合索引：多重索引分配方式相结合。<ul><li>UNIX的文件系统采用三级索引机制。在文件控制块（FCB）中，设置了一个索引表，共有13个索引地址。其中，前10个为直接索引地址，后3个为间接索引地址，包括1个一级索引地址、1个二级索引地址和1个三级索引地址。</li><li>每一块中能记录的数据块数=512/4≈128<br>一级索引时文件最大长度的字节数 = 128 × 512<br>二级索引时文件最大长度的字节数 = 128×128 × 512<br>三级索引时文件最大长度的字节数 = 128×128×128 × 512<br>最大搜索文件的长度 = (10 + 128 + 128×128 + 128×128×128) × 512<br><img data-src="/images/mixed_index_allocation.jpg" alt="" title="混合索引分配方式"><br>与多层索引方式不同，混合索引有个<strong>主索引表</strong>（13个地址项）【主索引表是索引节点的一部分】，若题目告知主索引表<strong>在内存中【主索引表在FCB中，FCB在内存中】</strong>，访问k级间址需要读磁盘k+1次（读取数据块1次）；若主索引表不在内存中，访问k级间址需要读磁盘k+2次。<br>而多层索引没有主索引表，因此相当于直接从混合索引的一级间址开始读磁盘，故k层索引读磁盘k+1次。<br>【以上是使用索引结点的次数】<br>注：<ul><li>与单个文件长度无关的因素：索引结点的总数【索引结点个数仅与文件个数有关，一个索引结点对应一个文件】</li><li>一个盘块号就有一个索引项</li><li>将文件描述信息从目录项中分离出来，有利于减少查找文件时的I/O信息量</li><li>各级索引表最大不能超过一个块</li><li>判断读磁盘次数时，注意顶级索引块是否已调入磁盘<br><i>文件物理地址指的就是主索引表的始址</i><h3 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h3><img data-src="/images/mixed_index_allocation_1.png" alt=""><br><br><br>如有错误，欢迎指正！</li></ul></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;磁盘空间分配的主要常用方法有三个：&lt;strong&gt;连续分配&lt;/strong&gt;、&lt;strong&gt;链接分配&lt;/strong&gt;和&lt;strong&gt;索引分配&lt;/strong&gt;。本文主要讨论&lt;strong&gt;索引分配中处理索引块大小&lt;/strong&gt;的问题。&lt;br&gt;
    
    </summary>
    
      <category term="计算机操作系统" scheme="http://0202zc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="http://0202zc.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="OS" scheme="http://0202zc.github.io/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>二叉树的应用</title>
    <link href="http://0202zc.github.io/2020/01/19/algorithm-btree/"/>
    <id>http://0202zc.github.io/2020/01/19/algorithm-btree/</id>
    <published>2020-01-19T13:09:15.000Z</published>
    <updated>2020-01-19T13:12:04.112Z</updated>
    
    <content type="html"><![CDATA[<p>二叉树的系列应用<br><a id="more"></a></p><ol><li><p>层次遍历求二叉树宽度、高度</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设计一个非递归算法求以二叉链表存储的二叉树的高度、最大宽度</span></span><br><span class="line"><span class="comment">//非递归：层次遍历，设置level记录当前结点所在层数，last指向下一层第一个结点的位置</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Btdepth</span><span class="params">(BiTree T)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!T)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> front=<span class="number">-1</span>, rear=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> last=<span class="number">0</span>, level=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> maxWidth=<span class="number">0</span>;<span class="comment">//记录最大宽度</span></span><br><span class="line">    BiTree Q[MaxSize];</span><br><span class="line">    Q[++rear]=T;<span class="comment">//将根结点入队</span></span><br><span class="line">    BiTree p;</span><br><span class="line">    <span class="keyword">while</span>(front&lt;rear)&#123;<span class="comment">//队不空，则循环</span></span><br><span class="line">        p=Q[++rear];<span class="comment">//队列元素出队，即正在访问的结点</span></span><br><span class="line">        <span class="keyword">if</span>(p-&gt;lchild)</span><br><span class="line">            Q[++rear]=p-&gt;lchild;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;rchild)</span><br><span class="line">            Q[++rear]=p-&gt;rchild;</span><br><span class="line">        <span class="keyword">if</span>(front == last)处理该层的最右结点，此时last指向该层最右结点</span><br><span class="line">            level++;层数加<span class="number">1</span></span><br><span class="line">        last = rear;last指向下一层</span><br><span class="line">        maxWidth=maxWidth&gt;(last-front) ? maxWidth : (last-front);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> level;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>根结点左右子树叶子结点最远距离</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归：</span></span><br><span class="line"><span class="keyword">int</span> ldep=<span class="number">0</span>, rdep=<span class="number">0</span>;<span class="comment">//左右子树的高度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Btdepth2</span><span class="params">(BiTree *T)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ldep=Btdepth2(T-&gt;lchild);</span><br><span class="line">    rdep=Btdepth2(T-&gt;rchild);</span><br><span class="line">    <span class="keyword">if</span>(ldep&gt;rdep)</span><br><span class="line">        <span class="keyword">return</span> ldep+<span class="number">1</span>;<span class="comment">//树的高度为子树最大高度加根结点</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> rdep+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;二叉树的系列应用&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://0202zc.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://0202zc.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>就地逆置线性表元素</title>
    <link href="http://0202zc.github.io/2020/01/18/algorithm-reverse-linerlist/"/>
    <id>http://0202zc.github.io/2020/01/18/algorithm-reverse-linerlist/</id>
    <published>2020-01-18T08:56:00.000Z</published>
    <updated>2020-01-19T02:57:55.500Z</updated>
    
    <content type="html"><![CDATA[<p>本文分为线性表逆置操作的基本操作和扩展操作<br><a id="more"></a></p><h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><h2 id="顺序表"><a href="#顺序表" class="headerlink" title="顺序表"></a>顺序表</h2><blockquote><p>设计一个高效算法，将顺序表L的所有元素逆置，要求空间复杂度为O(1)</p></blockquote><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>扫描前半部分元素，对于L.data[i]（0&lt;i&lt;L.length/2），与后半部分对应元素L.data[L.length-i-1].data交换<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reverse</span><span class="params">(SqList &amp;L)</span> </span>&#123;</span><br><span class="line">ElemType temp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L.length/<span class="number">2</span>;i++) &#123;</span><br><span class="line">temp = L.data[i];</span><br><span class="line">L.data[i] = L.data[L.length-i<span class="number">-1</span>];</span><br><span class="line">L.data[L.length-i<span class="number">-1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>用两个指针i、j分别指向数组的前后<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reverse</span><span class="params">(<span class="keyword">int</span> *a[], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>, j=n<span class="number">-1</span>, temp;</span><br><span class="line">While(i&lt;j)&#123;</span><br><span class="line">temp=a[i];</span><br><span class="line">a[i]=a[j];</span><br><span class="line">a[j]=temp;</span><br><span class="line">i++; j--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h2><p>逆置链表（带头结点L）用“头插法”。尾插时，最后一个结点的指针要置空。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reverse</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">LinkNode *p=L-&gt;next, *q;</span><br><span class="line">L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">q=p-&gt;next;</span><br><span class="line">p-&gt;next=L-&gt;next;</span><br><span class="line">L-&gt;next=p;</span><br><span class="line">p=q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="双链表"><a href="#双链表" class="headerlink" title="双链表"></a>双链表</h2><p>逆置双链表除了上述的步骤外，还多了两个指针，p的后继的前驱和p的前驱的后继<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reverse</span><span class="params">(DLinkList L)</span> </span>&#123;</span><br><span class="line">DLinkNode *p=L-&gt;next, *q;</span><br><span class="line">L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">q=p-&gt;next;</span><br><span class="line">p-&gt;next=L-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;next!=<span class="literal">NULL</span>)  <span class="comment">//第一个用“头插法”插入L的结点没有后继</span></span><br><span class="line">P-&gt;next-&gt;prior=p;</span><br><span class="line">L-&gt;next=p;</span><br><span class="line">p-&gt;prior=L;</span><br><span class="line">p=q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="扩展操作"><a href="#扩展操作" class="headerlink" title="扩展操作"></a>扩展操作</h1><h2 id="两个顺序表位置互换"><a href="#两个顺序表位置互换" class="headerlink" title="两个顺序表位置互换"></a>两个顺序表位置互换</h2><blockquote><pre><code>一维数组A[m+n]中一次存放两个线性表(a1, a2, …, am)和(b1, b2 , …, bn)。编写一个算法，将数组中两个线性表的位置互换—&gt;(b1,b2,…,bn, a1,a2,…,am)</code></pre></blockquote><p>算法思想：将A[m+n]中全部元素逆置为(bn, bn-1, …, b2, b1, am, am-1, …, a2, a1)，再对前n个元素和后m个元素分别逆置<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reverse</span><span class="params">(<span class="keyword">int</span> A[], <span class="keyword">int</span> left, <span class="keyword">int</span> right, <span class="keyword">int</span> arraySize)</span></span>&#123;</span><br><span class="line"><span class="comment">//逆置(aleft, aleft+1, …, aright)</span></span><br><span class="line"><span class="keyword">if</span>(left&gt;=right||right&gt;=arraySize)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid=(left+right)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;  i&lt;= mid - left; i++)&#123;</span><br><span class="line"><span class="comment">//这里i作为下标的增量</span></span><br><span class="line"><span class="keyword">int</span> temp=A[left+i];</span><br><span class="line">A[left+i]=a[right-i];</span><br><span class="line">A[right-i]=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Exchange</span><span class="params">(<span class="keyword">int</span> A[], <span class="keyword">int</span> m, <span class="keyword">int</span> n, <span class="keyword">int</span> arraySize)</span></span>&#123;</span><br><span class="line"><span class="comment">//数组A[m+n]中，从0到m-1存放顺序表(a1,a2,…,am)，从m到n-1存放(b1,b2,…,bn)</span></span><br><span class="line">Reverse(A, <span class="number">0</span>, m+n<span class="number">-1</span>, arraySize);</span><br><span class="line">Reverse(A, <span class="number">0</span>, n<span class="number">-1</span>, arraySize);</span><br><span class="line">Reverse(A, n, m+n<span class="number">-1</span>, arraySize);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="三个顺序表位置互换"><a href="#三个顺序表位置互换" class="headerlink" title="三个顺序表位置互换"></a>三个顺序表位置互换</h2><blockquote><p>设规模n=3m, m≥1的顺序表存储在一维数组int array[n]中，它含有的元素为(a1,a2,…,am, b1, b2 , …, bm,c1,c2,…,cm)。请编写算法将上述顺序表改造成为(c1,c2,…,cm, bm, …, b2, b1, a1,a2,…,am)，要求时间复杂度和空间复杂度尽可能低。</p></blockquote><p><img data-src="/images/screenshot20200118171403.jpg" alt="" title="下标图示"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reverse</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp, mid, i;  <span class="comment">//i作为下标增量</span></span><br><span class="line">mid = (left+right)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= mid - left; i++)&#123;</span><br><span class="line">temp=a[left+i];</span><br><span class="line">a[left+i]=a[right-i];</span><br><span class="line">a[right-i]=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Exchange</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[], <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">Reverse(<span class="built_in">array</span>, <span class="number">0</span>, <span class="number">3</span>m<span class="number">-1</span>);</span><br><span class="line">Reverse(<span class="built_in">array</span>, <span class="number">0</span>, m<span class="number">-1</span>);</span><br><span class="line">Reverse(<span class="built_in">array</span>, <span class="number">2</span>m, <span class="number">3</span>m<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>就地逆置线性表元素基本操作总结为“二分交换”，基本思想是从头开始将前半部分与后半部分以中心元素对称的元素进行交换，直到走到了中心元素位置</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文分为线性表逆置操作的基本操作和扩展操作&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://0202zc.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://0202zc.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Algorithm" scheme="http://0202zc.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>文件控制块与索引节点的总结</title>
    <link href="http://0202zc.github.io/2019/11/24/os-FCB-and-inode/"/>
    <id>http://0202zc.github.io/2019/11/24/os-FCB-and-inode/</id>
    <published>2019-11-24T14:37:17.000Z</published>
    <updated>2020-01-19T12:46:12.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><p>文件控制块（FCB）与索引结点（inode）都是操作系统文件管理中逻辑结构的重要部分。在今日考研复习过程中，基本解决了以前遇到的“FCB与inode”的问题，现以此博文记录该知识点。<br><a id="more"></a></p><h1 id="文件控制块与索引结点"><a href="#文件控制块与索引结点" class="headerlink" title="文件控制块与索引结点"></a>文件控制块与索引结点</h1><p>这需要从目录结构说起。</p><ul><li>文件目录：包含有关文件的信息，信息主要有：属性，位置，所有权。这些信息主要是由OS进行管理。把所有的FCB组织在一起，就构成了文件目录，即文件控制块的有序集合，其包含许多目录项（即FCB）。<br><br>目录管理的基本要求：从用户角度看待，目录在用户（应用程序）所需要的文件名和文件之间提供一种映射。目录管理提供的是：按名存取。</li></ul><ul><li>共享系统中目录还需要提供控制访问文件的信息。重名问题主要通过树形结构来解决。</li></ul><!-- ![](/images/catalogue_FCB.jpg "目录实现对比") --><table><thead><tr><th>普通文件目录</th><th>以索引结点实现的目录</th></tr></thead><tbody><tr><td>由FCB构成的一个一个目录项组成；<br>FCB中存放了和文件相关的所有控制信息</td><td>a. 文件名<br> b. 指向索引结点的指针</td></tr></tbody></table><p>采用索引结点的方式来实现目录，好处是文件目录的目录项长度会缩短很多。因为通过文件目录实现对文件的按名存取时，在寻找文件的过程中只需要用到文件名这个信息，而其他信息在寻找文件的时候没有必要。<br>如果一个目录中存放了很多个文件，采用传统的以FCB构成目录项的方式，那么这个文件目录会非常大，因为每个目录项就特别大。<br>而采用索引结点的方式实现目录，每个目录项就会很小，只包含文件名和指向索引结点的指针。可以提高文件检索速度。</p><ul><li>FCB：文件控制块。用于存放控制文件的各种信息的数据结构，实现了按名存取。</li></ul><p><br><br>总结如下表：<br><img data-src="/images/FCB&amp;inode_1.jpg" alt="" title="FCB与inode"></p><p>此处有个小问题：</p><ul><li>某科技大学的OS考研试卷填空题答案中索引节点分为文件描述信息和i结点，而资料书上说的是索引节点即为i结点</li></ul><p>检索目录文件（FCB的集合）时只用到了文件名。仅当找到一个目录项时才需要从该目录项（FCB）中读出该文件的物理地址。即：检索目录时文件的其他描述信息用不到，也因此不必调入内存。那么我们是否可以考虑，把<strong>文件名</strong>和<strong>文件的描述信息(FCB-文件名)</strong>分开，文件的描述信息单独形成一个数据结构，这个被称作索引结点。简称为i结点。<br>这样就可以简化目录结构为：<strong>文件名</strong>对应<strong>i结点指针</strong>。<br>比如在UNIX系统中，文件目录项（FCB）占16B，其中14B是文件名，2B是i结点指针。<br>注意到设计i结点的设计思路是怎么得到的，就很容易理解FCB和i结点包含的信息大部分是相同的，i结点只是抽出了文件名。每个文件对应一个文件名，则一个文件也只要一个i结点。</p><ul><li>存放在磁盘上的索引结点称为磁盘索引结点。</li></ul><h2 id="文件控制块与索引节点的区别"><a href="#文件控制块与索引节点的区别" class="headerlink" title="文件控制块与索引节点的区别"></a>文件控制块与索引节点的区别</h2><p>个人总结：<br>从文件目录结构来看，UNIX中，</p><ul><li>文件目录由FCB（目录项）组成</li><li>FCB = 文件名 + inode</li><li>inode包含了文件物理地址信息</li><li>物理地址信息的组成主要是主索引表<br><br><br>如图所示:<br><img data-src="/images/FCB&amp;inode.jpg" alt="" title="逻辑结构图"></li></ul><p><strong>个人能力有限，总结有问题请指出。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h1&gt;&lt;p&gt;文件控制块（FCB）与索引结点（inode）都是操作系统文件管理中逻辑结构的重要部分。在今日考研复习过程中，基本解决了以前遇到的“FCB与inode”的问题，现以此博文记录该知识点。&lt;br&gt;
    
    </summary>
    
      <category term="计算机操作系统" scheme="http://0202zc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="http://0202zc.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="OS" scheme="http://0202zc.github.io/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>Python 3.6 监控爬取成绩并推送到邮箱(基于百度云接口的验证码识别)</title>
    <link href="http://0202zc.github.io/2018/12/28/Python-3-6-%E7%9B%91%E6%8E%A7%E7%88%AC%E5%8F%96%E6%88%90%E7%BB%A9%E5%B9%B6%E6%8E%A8%E9%80%81%E5%88%B0%E9%82%AE%E7%AE%B1(%E5%9F%BA%E4%BA%8E%E7%99%BE%E5%BA%A6%E4%BA%91%E6%8E%A5%E5%8F%A3%E7%9A%84%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB)/"/>
    <id>http://0202zc.github.io/2018/12/28/Python-3-6-监控爬取成绩并推送到邮箱(基于百度云接口的验证码识别)/</id>
    <published>2018-12-28T15:53:25.000Z</published>
    <updated>2020-01-19T03:01:23.733Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>本程序模拟登录正方教务系统获取本人当前学期成绩（也可以手动改学期学年），20分钟检测一次，当有新成绩公布时就发送到邮箱，本程序用到的是我学校的教务网网址。</p><ul><li>本项目GitHub地址<a href="https://github.com/0202zc/grade_sender" target="_blank" rel="noopener">大连大学成绩监控查询脚本</a><a id="more"></a></li><li>第一代手动输入验证码的程序<a href="https://0202zc.github.io/2018/07/25/Python-3-6-监控爬取成绩并推送到邮箱">Python 3.6 监控爬取成绩并推送到邮箱</a></li><li>验证码识别参照了XiaoYaoII的文章<a href="https://blog.csdn.net/qq_35323001/article/details/79100664" target="_blank" rel="noopener">利用python3 爬取教务处实现自动查询成绩并发送给用户QQ邮箱</a></li><li>使用百度云文字识别的SDK的帮助文档在此<a href="https://ai.baidu.com/docs#/OCR-Python-SDK/top" target="_blank" rel="noopener">Python SDK文档</a></li></ul><h1 id="实现思想"><a href="#实现思想" class="headerlink" title="实现思想"></a>实现思想</h1><p>本程序的实现主要步骤有：</p><ol><li>首先登录进入成绩查询页面</li><li>将对应的所有成绩爬取下来</li><li>将爬取下来的成绩进行格式化（表格）</li><li>美化后的成绩表格发送到邮箱</li></ol><h1 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h1><ol><li>登录<ol><li>得到跳转后页面的地址（为了防止登录重复，教务系统后面会跳转后在网址后面加一串随机的hash码）</li><li>利用百度云识别验证码</li></ol></li><li>将需要的列爬取下来</li><li>每次爬取后让程序暂停20分钟，将每次所爬取的成绩数量进行对比，如果与第一次爬取的数量相同则不发邮件，否则发送邮件</li></ol><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">大连大学成绩查询助手V1.7.190216</span></span><br><span class="line"><span class="string">Code By ZC Liang</span></span><br><span class="line"><span class="string">2018.6.6</span></span><br><span class="line"><span class="string">Completed on 2019.2.15</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> getpass</span><br><span class="line"><span class="keyword">import</span> http.cookiejar</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.utils <span class="keyword">import</span> formataddr</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> prettytable <span class="keyword">as</span> pt</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipOcr</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> prettytable <span class="keyword">import</span> PrettyTable</span><br><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> ReadTimeout</span><br><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> ConnectionError</span><br><span class="line"></span><br><span class="line">my_sender = <span class="string">'发件人邮箱账号'</span>    <span class="comment"># 发件人邮箱账号</span></span><br><span class="line">my_pass = <span class="string">'发件人邮箱密码'</span>              <span class="comment"># 发件人邮箱密码(当时申请smtp给的口令)</span></span><br><span class="line"><span class="comment"># my_user = '收件人邮箱账号'      # 收件人邮箱账号，我这边发送给自己</span></span><br><span class="line">email_send_to = <span class="string">''</span>                <span class="comment"># 收件人邮箱账号</span></span><br><span class="line"></span><br><span class="line">DstDir = os.getcwd()</span><br><span class="line">searchCount = <span class="number">0</span>  <span class="comment"># 查询次数</span></span><br><span class="line">count = <span class="number">0</span>  <span class="comment"># 循环计数</span></span><br><span class="line">scorenum = <span class="number">0</span>  <span class="comment"># 成绩条数</span></span><br><span class="line">score = []</span><br><span class="line">scorenp = np.array(score)</span><br><span class="line">makeup_course_num = <span class="number">0</span>  <span class="comment"># 重修课程数目</span></span><br><span class="line">makeup_course_flag = <span class="number">-1</span>  <span class="comment"># 重修课程数目下标</span></span><br><span class="line">courseList = [] <span class="comment"># 选课情况查询列表</span></span><br><span class="line">required_course_num = <span class="number">0</span> <span class="comment"># 本学期必修课总数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 准备Cookie和opener，因为cookie存于opener中，所以以下所有网页操作全部要基于同一个opener</span></span><br><span class="line">cookie = http.cookiejar.CookieJar()</span><br><span class="line">opener = urllib.request.build_opener(</span><br><span class="line">    urllib.request.HTTPCookieProcessor(cookie))</span><br><span class="line"></span><br><span class="line">final_url = <span class="string">""</span>      <span class="comment"># 头 + 随机编码 + default2.aspx</span></span><br><span class="line">final_url_head = <span class="string">""</span></span><br><span class="line">url_head = <span class="string">"202.199.155."</span> + str(random.randint(<span class="number">33</span>, <span class="number">37</span>))     <span class="comment"># 随机产生网址</span></span><br><span class="line"></span><br><span class="line">ddlxn = <span class="string">""</span></span><br><span class="line">ddlxq = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="string">""" 你的 APPID AK SK """</span></span><br><span class="line">APP_ID = <span class="string">'你的 APP_ID'</span></span><br><span class="line">API_KEY = <span class="string">'你的 API_KEY'</span></span><br><span class="line">SECRET_KEY = <span class="string">'你的 SECRET_KEY'</span></span><br><span class="line"></span><br><span class="line">client = AipOcr(APP_ID, API_KEY, SECRET_KEY)</span><br><span class="line"></span><br><span class="line"><span class="string">""" 读取图片 """</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_content</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">return</span> fp.read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断操作系统类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getOpeningSystem</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> platform.system()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断操作系统类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getOpeningSystem</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> platform.system()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断是否联网</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isConnected</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(<span class="string">'http://'</span> + url_head, timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'网络检测错误status_code: '</span> + response.status_code, <span class="string">'http://'</span> + url_head)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">except</span> (ConnectionError, ReadTimeout):</span><br><span class="line">        print(<span class="string">'无网络连接。'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取重定向编码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_for_redirects</span><span class="params">(url)</span>:</span></span><br><span class="line">    r = requests.head(url)</span><br><span class="line">    <span class="keyword">if</span> r.ok:</span><br><span class="line">        <span class="keyword">return</span> r.headers[<span class="string">'location'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'[no redirect]'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   图像转换并识别</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_util</span><span class="params">(img)</span>:</span></span><br><span class="line">    new_im = img.convert(<span class="string">"RGB"</span>)  <span class="comment"># 将验证码图片转换成24位图片</span></span><br><span class="line">    new_im.save(<span class="string">''</span> + DstDir + <span class="string">'\\ScoreHelper\\CheckCode1.jpg'</span>)  <span class="comment"># 将24位图片保存到本地</span></span><br><span class="line"></span><br><span class="line">    arr = np.array(Image.open(<span class="string">''</span> + DstDir + <span class="string">'\\ScoreHelper\\CheckCode1.jpg'</span>).convert(<span class="string">"L"</span>))</span><br><span class="line"></span><br><span class="line">    b = <span class="number">255</span> - arr</span><br><span class="line">    im = Image.fromarray(b.astype(<span class="string">'uint8'</span>))  <span class="comment"># 翻转</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># d = 255 * (arr / 255) ** 2</span></span><br><span class="line">    <span class="comment"># im = Image.fromarray(d.astype('uint8'))  # 灰度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#  此处验证过，翻转比灰度识别率更高</span></span><br><span class="line">    im.save(<span class="string">''</span> + DstDir + <span class="string">'\\ScoreHelper\\CheckCode2.jpg'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   验证码识别</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">code_recognition</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#   调用百度云识别验证码</span></span><br><span class="line">        result = client.basicAccurate(get_file_content(<span class="string">''</span> + DstDir + <span class="string">'\\ScoreHelper\\CheckCode2.jpg'</span>))</span><br><span class="line">        word = result.get(<span class="string">'words_result'</span>)</span><br><span class="line">        res = <span class="string">""</span></span><br><span class="line">        <span class="keyword">if</span> len(word):</span><br><span class="line">            res = re.findall(<span class="string">'[a-zA-Z0-9]+'</span>, word[<span class="number">0</span>].get(<span class="string">'words'</span>))[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">elif</span> len(res) &gt; <span class="number">4</span>:  <span class="comment"># 教务系统所有的验证码都是四位的，若大于四位，则挑选前四位</span></span><br><span class="line">            res = res[<span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   登陆</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 构造表单</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">'txtUserName'</span>: sid,</span><br><span class="line">        <span class="string">'Textbox1'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'Textbox2'</span>: spwd,</span><br><span class="line">        <span class="string">'RadioButtonList1'</span>: <span class="string">'学生'</span>,</span><br><span class="line">        <span class="string">'Button1'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'lbLanguage'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'hidPdrs'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'hidsc'</span>: <span class="string">''</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#   获取验证码</span></span><br><span class="line">    res = opener.open(final_url_head + <span class="string">'/checkcode.aspx'</span>).read()</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">''</span> + DstDir + <span class="string">'\\ScoreHelper\\CheckCode.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(res)</span><br><span class="line">    img = Image.open(<span class="string">''</span> + DstDir + <span class="string">'\\ScoreHelper\\CheckCode.jpg'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#   图片处理</span></span><br><span class="line">    image_util(img)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># img.show()</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'验证码识别结果：'</span> + code_recognition())</span><br><span class="line">    vcode = code_recognition()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># img.close()</span></span><br><span class="line"></span><br><span class="line">    params[<span class="string">'txtSecretCode'</span>] = vcode</span><br><span class="line"></span><br><span class="line">    <span class="comment">#   获取ViewState</span></span><br><span class="line">    response = urllib.request.urlopen(<span class="string">'http://'</span> + url_head + <span class="string">'/'</span>)</span><br><span class="line">    html = response.read().decode(<span class="string">'gb2312'</span>)</span><br><span class="line">    viewstate = re.search(</span><br><span class="line">        <span class="string">'&lt;input type="hidden" name="__VIEWSTATE" value="(.+?)"'</span>, html)</span><br><span class="line">    params[<span class="string">'__VIEWSTATE'</span>] = viewstate.group(<span class="number">1</span>)</span><br><span class="line">    <span class="comment">#   尝试登陆</span></span><br><span class="line">    loginurl = final_url</span><br><span class="line">    print(<span class="string">"\n本次登录所用网址为："</span> + loginurl + <span class="string">"\n"</span>)</span><br><span class="line">    data = urllib.parse.urlencode(params).encode(<span class="string">'gb2312'</span>)</span><br><span class="line">    response = opener.open(loginurl, data)</span><br><span class="line">    <span class="keyword">if</span> response.geturl() == final_url:</span><br><span class="line">        print(<span class="string">'登陆失败，可能是姓名，学号，密码或验证码填写错误！'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   获取本学期必修课数目</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_RequiredCourse_num</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> required_course_num</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"正在查询本学期必修课数目..."</span>)</span><br><span class="line">    <span class="comment">#   构造url</span></span><br><span class="line">    url = <span class="string">''</span>.join([</span><br><span class="line">        final_url_head + <span class="string">'/xsxkqk.aspx'</span>,</span><br><span class="line">        <span class="string">'?xh='</span>,</span><br><span class="line">        sid,</span><br><span class="line">        <span class="string">'&amp;xm='</span>,</span><br><span class="line">        urllib.parse.quote(sname),</span><br><span class="line">        <span class="string">'&amp;gnmkdm=N121615'</span>,</span><br><span class="line">    ])</span><br><span class="line">    <span class="comment">#   构建查询学生选课情况表单</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">'ddlxn'</span>: ddlxn,</span><br><span class="line">        <span class="string">'ddlxq'</span>: ddlxq,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#   构造Request对象，填入Header，防止302跳转，获取新的View_State</span></span><br><span class="line">    req = urllib.request.Request(url)</span><br><span class="line">    req.add_header(<span class="string">'Referer'</span>, final_url)</span><br><span class="line">    req.add_header(<span class="string">'Origin'</span>, <span class="string">'http://'</span> + url_head + <span class="string">'/'</span>)</span><br><span class="line">    req.add_header(</span><br><span class="line">        <span class="string">'User-Agent'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36'</span>)</span><br><span class="line">    response = opener.open(req)</span><br><span class="line">    html = response.read().decode(<span class="string">'gb2312'</span>)</span><br><span class="line">    viewstate = re.search(</span><br><span class="line">        <span class="string">'&lt;input type="hidden" name="__VIEWSTATE" value="(.+?)"'</span>, html)</span><br><span class="line">    params[<span class="string">'__VIEWSTATE'</span>] = viewstate.group(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#   查询所有成绩</span></span><br><span class="line">    req = urllib.request.Request(</span><br><span class="line">        url, urllib.parse.urlencode(params).encode(<span class="string">'gb2312'</span>))</span><br><span class="line">    req.add_header(<span class="string">'Referer'</span>, final_url)</span><br><span class="line">    req.add_header(<span class="string">'Origin'</span>, <span class="string">'http://'</span> + url_head + <span class="string">'/'</span>)</span><br><span class="line">    response = opener.open(req)</span><br><span class="line">    soup = BeautifulSoup(response.read().decode(<span class="string">'gb2312'</span>), <span class="string">'html.parser'</span>)</span><br><span class="line">    html = soup.find(<span class="string">'table'</span>, class_=<span class="string">'datelist'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#   指定要输出的列，原网页的表格列下标从0开始</span></span><br><span class="line">    <span class="comment">#   用于标记是否是遍历第一行</span></span><br><span class="line">    flag = <span class="keyword">True</span></span><br><span class="line">    <span class="comment">#   根据DOM解析所要数据，首位的each是NavigatableString对象，其余为Tag对象</span></span><br><span class="line">    <span class="comment">#   遍历行</span></span><br><span class="line">    counter = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> html:</span><br><span class="line">        columnCounter = <span class="number">0</span></span><br><span class="line">        column = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> type(each) == bs4.element.NavigableString:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">#   遍历列</span></span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> each.contents:</span><br><span class="line">                <span class="keyword">if</span> item != <span class="string">'\n'</span>:</span><br><span class="line">                    <span class="keyword">if</span> counter &gt; <span class="number">0</span> <span class="keyword">and</span> columnCounter == <span class="number">3</span>:</span><br><span class="line">                        courseList.append(str(item.contents[<span class="number">0</span>]).strip())</span><br><span class="line">                    columnCounter += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> flag:</span><br><span class="line">                flag = <span class="keyword">False</span></span><br><span class="line">            counter += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> courseList:</span><br><span class="line">        <span class="keyword">if</span> each == <span class="string">"必修课程"</span>:</span><br><span class="line">            required_course_num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   获取成绩</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getScore</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> searchCount</span><br><span class="line">    <span class="keyword">global</span> scorenum</span><br><span class="line">    <span class="keyword">global</span> scorenp</span><br><span class="line">    <span class="keyword">global</span> ddlxn</span><br><span class="line">    <span class="keyword">global</span> ddlxq</span><br><span class="line">    score = []</span><br><span class="line"></span><br><span class="line">    <span class="comment">#   构造url</span></span><br><span class="line">    url = <span class="string">''</span>.join([</span><br><span class="line">        final_url_head + <span class="string">'/xscjcx_dq.aspx'</span>,</span><br><span class="line">        <span class="string">'?xh='</span>,</span><br><span class="line">        sid,</span><br><span class="line">        <span class="string">'&amp;xm='</span>,</span><br><span class="line">        urllib.parse.quote(sname),</span><br><span class="line">        <span class="string">'&amp;gnmkdm=N121605'</span>,</span><br><span class="line">    ])</span><br><span class="line">    <span class="comment">#   构建查询全部成绩表单</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">'ddlxn'</span>: ddlxn,  <span class="comment"># 全部为 %C8%AB%B2%BF</span></span><br><span class="line">        <span class="string">'ddlxq'</span>: ddlxq,</span><br><span class="line">        <span class="string">'btnCx'</span>: <span class="string">'查询'</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#   构造Request对象，填入Header，防止302跳转，获取新的View_State</span></span><br><span class="line">    req = urllib.request.Request(url)</span><br><span class="line">    req.add_header(<span class="string">'Referer'</span>, final_url)</span><br><span class="line">    req.add_header(<span class="string">'Origin'</span>, <span class="string">'http://'</span> + url_head + <span class="string">'/'</span>)</span><br><span class="line">    req.add_header(</span><br><span class="line">        <span class="string">'User-Agent'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36'</span>)</span><br><span class="line">    response = opener.open(req)</span><br><span class="line">    html = response.read().decode(<span class="string">'gb2312'</span>)</span><br><span class="line">    viewstate = re.search(</span><br><span class="line">        <span class="string">'&lt;input type="hidden" name="__VIEWSTATE" value="(.+?)"'</span>, html)</span><br><span class="line">    params[<span class="string">'__VIEWSTATE'</span>] = viewstate.group(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#   查询所有成绩</span></span><br><span class="line">    req = urllib.request.Request(</span><br><span class="line">        url, urllib.parse.urlencode(params).encode(<span class="string">'gb2312'</span>))</span><br><span class="line">    req.add_header(<span class="string">'Referer'</span>, final_url)</span><br><span class="line">    req.add_header(<span class="string">'Origin'</span>, <span class="string">'http://'</span> + url_head + <span class="string">'/'</span>)</span><br><span class="line">    response = opener.open(req)</span><br><span class="line">    soup = BeautifulSoup(response.read().decode(<span class="string">'gb2312'</span>), <span class="string">'html.parser'</span>)</span><br><span class="line">    html = soup.find(<span class="string">'table'</span>, class_=<span class="string">'datelist'</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"执行第"</span> + str(searchCount) + <span class="string">"次查询："</span>)</span><br><span class="line">    print(<span class="string">'你的所有成绩如下：'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#   指定要输出的列，原网页的表格列下标从0开始</span></span><br><span class="line">    outColumn = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>]</span><br><span class="line">    <span class="comment">#   用于标记是否是遍历第一行</span></span><br><span class="line">    flag = <span class="keyword">True</span></span><br><span class="line">    <span class="comment">#   根据DOM解析所要数据，首位的each是NavigatableString对象，其余为Tag对象</span></span><br><span class="line">    <span class="comment">#   遍历行</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> html:</span><br><span class="line">        columnCounter = <span class="number">0</span></span><br><span class="line">        column = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> type(each) == bs4.element.NavigableString:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">#   遍历列</span></span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> each.contents:</span><br><span class="line">                <span class="keyword">if</span> item != <span class="string">'\n'</span>:</span><br><span class="line">                    <span class="keyword">if</span> columnCounter <span class="keyword">in</span> outColumn:</span><br><span class="line">                        <span class="comment">#   要使用str转换，不然陷入copy与deepcopy的无限递归</span></span><br><span class="line">                        column.append(str(item.contents[<span class="number">0</span>]).strip())</span><br><span class="line">                    columnCounter += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> flag:</span><br><span class="line">                table = PrettyTable(column)</span><br><span class="line">                flag = <span class="keyword">False</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                table.add_row(column)</span><br><span class="line">            score.extend([column])</span><br><span class="line">    searchCount += <span class="number">1</span></span><br><span class="line">    scorenp = np.array(score)</span><br><span class="line">    <span class="comment">#   table.set_style(pt.PLAIN_COLUMNS)</span></span><br><span class="line"></span><br><span class="line">    print(table)</span><br><span class="line">    print(<span class="string">"分条统计："</span>)</span><br><span class="line">    scorenum = sendScore(table)</span><br><span class="line">    print(<span class="string">"成绩数目: "</span> + str(scorenum) + <span class="string">"条"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendScore</span><span class="params">(table)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> scorenum</span><br><span class="line">    <span class="keyword">global</span> count</span><br><span class="line">    <span class="keyword">global</span> email_send_to</span><br><span class="line">    <span class="keyword">global</span> scorenp</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> table:</span><br><span class="line">        print(i.get_string())</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> count &gt; scorenum:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            scorenum = count</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 文本模式</span></span><br><span class="line">            <span class="comment"># context = i.get_string().replace("+"," ")</span></span><br><span class="line">            <span class="comment"># context = context.replace("-"," ")</span></span><br><span class="line">            <span class="comment"># context = context.replace("2017 2018","2017-2018")</span></span><br><span class="line">            <span class="comment"># if(scorenum == 1):</span></span><br><span class="line">            <span class="comment">#     msg=MIMEText("有成绩下来了：" + context,'plain','utf-8')</span></span><br><span class="line">            <span class="comment"># else:</span></span><br><span class="line">            <span class="comment">#     msg=MIMEText("又有成绩下来了：" + context,'plain','utf-8')</span></span><br><span class="line">            <span class="comment"># msg = prettyScore()</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># html格式</span></span><br><span class="line">            msg = prettyScore()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 括号里的对应发件人邮箱昵称、发件人邮箱账号</span></span><br><span class="line">            msg[<span class="string">'From'</span>] = formataddr([<span class="string">"1115810371@qq.com"</span>, my_sender])</span><br><span class="line">            <span class="comment"># 括号里的对应收件人邮箱昵称、收件人邮箱账号</span></span><br><span class="line">            msg[<span class="string">'To'</span>] = formataddr([email_send_to, email_send_to])</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> count == required_course_num:</span><br><span class="line">                msg[<span class="string">'Subject'</span>] = <span class="string">"第"</span> + str(count) + <span class="string">"次成绩推送加平均绩点"</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                msg[<span class="string">'Subject'</span>] = <span class="string">"第"</span> + str(count) + <span class="string">"次成绩推送"</span>  <span class="comment"># 邮件的主题，也可以说是标题</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 发件人邮箱中的SMTP服务器，端口是465</span></span><br><span class="line">            server = smtplib.SMTP_SSL(<span class="string">"smtp.qq.com"</span>, <span class="number">465</span>)</span><br><span class="line">            server.login(my_sender, my_pass)  <span class="comment"># 括号中对应的是发件人邮箱账号、邮箱密码</span></span><br><span class="line">            <span class="comment"># 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件</span></span><br><span class="line">            server.sendmail(my_sender, [email_send_to, ], msg.as_string())</span><br><span class="line">            server.quit()  <span class="comment"># 关闭连接</span></span><br><span class="line">            print(<span class="string">"发送成功，请注意在此邮箱查收："</span> + email_send_to)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">            print(<span class="string">"发送失败！"</span>)</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> scorenum != required_course_num:</span><br><span class="line">        print(<span class="string">"程序休息中...（按'Ctrl C'结束）"</span>)</span><br><span class="line">        time.sleep(<span class="number">1200</span>)  <span class="comment"># 二十分钟查一次</span></span><br><span class="line">    <span class="keyword">return</span> scorenum</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   接收构造成功的表格</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prettyScore</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> scorenp</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># context = MIMEText(html,_subtype='html',_charset='utf-8')  #解决乱码</span></span><br><span class="line">        msg = MIMEText(str(htmlText(scorenum)), <span class="string">"html"</span>, <span class="string">"gb2312"</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">    <span class="keyword">return</span> msg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   构造邮件内容：成绩表格</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">htmlText</span><span class="params">(scorenum)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> required_course_num</span><br><span class="line"></span><br><span class="line">    html = <span class="string">"""</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                        &lt;table color="CCCC33" width="800" border="1" cellspacing="0" cellpadding="5" text-align="center"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;tr&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td&gt;课程名称&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td&gt;课程性质&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td&gt;学分&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td&gt;平时成绩&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td&gt;期末成绩&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td&gt;成绩&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;/tr&gt;   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                    """</span> + addtrs(scorenum) + <span class="string">"""</span></span><br><span class="line"><span class="string">                        &lt;/table&gt;</span></span><br><span class="line"><span class="string">                    """</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#   最后一次推送时计算GPA并与成绩表格一起推送</span></span><br><span class="line">    <span class="keyword">if</span> scorenum == required_course_num:</span><br><span class="line">        html += <span class="string">"""</span></span><br><span class="line"><span class="string">                        &lt;br/&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class='gpa_text' style='font-size: 25px;font-style: italic;'&gt;--&gt;平均绩点：%s &lt;--&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    """</span> % (getGPA()) + <span class="string">"""</span></span><br><span class="line"><span class="string">                        &lt;br/&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class='end_words' style='font-size: 20px;'&gt;本学期考试成绩查询完成！&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    """</span></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   在发送的表格里添加成绩行</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addtrs</span><span class="params">(scorenum)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> scorenp</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    array = []</span><br><span class="line">    <span class="keyword">while</span> i &lt;= scorenum:</span><br><span class="line">        trs = <span class="string">'''</span></span><br><span class="line"><span class="string">                                    &lt;tr&gt;   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                            &lt;td&gt;%s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                            &lt;td&gt;%s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                            &lt;td&gt;%s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                            &lt;td&gt;%s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                            &lt;td&gt;%s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                        '''</span> % (scorenp[i][<span class="number">0</span>], scorenp[i][<span class="number">1</span>], scorenp[i][<span class="number">2</span>], scorenp[i][<span class="number">3</span>], scorenp[i][<span class="number">4</span>])</span><br><span class="line">        <span class="keyword">if</span> (scorenp[i][<span class="number">5</span>].isalpha() <span class="keyword">and</span> scorenp[i][<span class="number">5</span>] == <span class="string">"A"</span>) <span class="keyword">or</span> (scorenp[i][<span class="number">5</span>].isdigit() <span class="keyword">and</span> int(scorenp[i][<span class="number">5</span>]) &gt;= <span class="number">90</span>):</span><br><span class="line">            <span class="comment">#   等级A和90以上的成绩标记为绿色</span></span><br><span class="line">            trs += <span class="string">'&lt;td style="color:springgreen;"&gt;'</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> (scorenp[i][<span class="number">5</span>].isalpha() <span class="keyword">and</span> scorenp[i][<span class="number">5</span>] == <span class="string">"F"</span>) <span class="keyword">or</span> (</span><br><span class="line">                scorenp[i][<span class="number">5</span>].isdigit() <span class="keyword">and</span> int(scorenp[i][<span class="number">5</span>]) &lt; <span class="number">60</span>):</span><br><span class="line">            <span class="comment">#   不及格的成绩标记为红色</span></span><br><span class="line">            trs += <span class="string">'&lt;td style="color:red;"&gt;'</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">#   普通成绩不标记</span></span><br><span class="line">            trs += <span class="string">'&lt;td&gt;'</span></span><br><span class="line"></span><br><span class="line">        trs += <span class="string">'''</span></span><br><span class="line"><span class="string">                            %s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">        '''</span> % (scorenp[i][<span class="number">5</span>])</span><br><span class="line">        array.append(trs)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    s = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> array:</span><br><span class="line">        s += str(x)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   计算GPA</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getGPA</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> scorenp</span><br><span class="line">    <span class="keyword">global</span> scorenum</span><br><span class="line">    <span class="keyword">global</span> makeup_course_num</span><br><span class="line">    <span class="keyword">global</span> makeup_course_flag</span><br><span class="line"></span><br><span class="line">    sc = []</span><br><span class="line">    GPAlist = []</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    coursenum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> i &lt;= scorenum:</span><br><span class="line">        <span class="keyword">if</span> scorenp[i][<span class="number">1</span>] != <span class="string">"必修课程"</span> <span class="keyword">or</span> scorenp[i][<span class="number">6</span>] == <span class="string">"是"</span>:</span><br><span class="line">            <span class="comment">#   排除非必修课以及重修课</span></span><br><span class="line">            makeup_course_num += <span class="number">1</span></span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">#   有些成绩是等级，需要转换为数字</span></span><br><span class="line">            <span class="keyword">if</span> scorenp[i][<span class="number">5</span>].isalpha() <span class="keyword">and</span> scorenp[i][<span class="number">5</span>] != <span class="string">"F"</span>:</span><br><span class="line">                sc.append(<span class="number">745</span> - <span class="number">10</span> * ord(scorenp[i][<span class="number">5</span>]))  <span class="comment"># 计算式子：x - (x - A) + 10 * (D - x) 即 745 - 10 * x</span></span><br><span class="line">            <span class="keyword">elif</span> scorenp[i][<span class="number">5</span>] == <span class="string">"F"</span>:</span><br><span class="line">                sc.append(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                sc.append(int(scorenp[i][<span class="number">5</span>]))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> int(sc[j]) &lt; <span class="number">60</span>:</span><br><span class="line">                <span class="comment">#   不及格的科目绩点为0</span></span><br><span class="line">                GPAlist.append(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment">#   计算单科绩点</span></span><br><span class="line">                GPAlist.append((int(sc[j]) - <span class="number">50</span>) / <span class="number">10</span> * float(scorenp[i][<span class="number">2</span>]))</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">            coursenum += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    scoresum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> i &lt;= scorenum:</span><br><span class="line">        <span class="keyword">if</span> scorenp[i][<span class="number">1</span>] != <span class="string">"必修课程"</span> <span class="keyword">or</span> scorenp[i][<span class="number">6</span>] == <span class="string">"是"</span>:</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        sum += GPAlist[j]</span><br><span class="line">        scoresum += float(scorenp[i][<span class="number">2</span>])</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    GPA = sum / scoresum</span><br><span class="line">    print(<span class="string">"平均绩点："</span> + str(GPA))</span><br><span class="line">    <span class="keyword">return</span> GPA</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   根据当前日期设置查询学期</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setSemester</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> ddlxn</span><br><span class="line">    <span class="keyword">global</span> ddlxq</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        localtime = time.localtime(time.time())  <span class="comment"># 获取当前日期</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#   第一学期是从当年9月到次年2月，第二学期则是从当年3月到8月</span></span><br><span class="line">        <span class="keyword">if</span> (int((localtime.tm_mon) &gt;= <span class="number">9</span> <span class="keyword">and</span> int(localtime.tm_mon) &lt;= <span class="number">12</span>) <span class="keyword">or</span> (</span><br><span class="line">                int(localtime.tm_mon) &gt;= <span class="number">1</span> <span class="keyword">and</span> int(localtime.tm_mon) &lt;= <span class="number">2</span>)):</span><br><span class="line">            <span class="comment"># if (str(localtime.tm_year) == "2020" and int((localtime.tm_mon) &gt;= 7)):</span></span><br><span class="line">            <span class="comment">#     print("您已毕业，无须监控成绩！")</span></span><br><span class="line">            <span class="comment">#     sys.exit(0)</span></span><br><span class="line">            <span class="keyword">if</span> (int(localtime.tm_mon) &gt;= <span class="number">1</span> <span class="keyword">and</span> int(localtime.tm_mon) &lt;= <span class="number">2</span>):</span><br><span class="line">                ddlxn = str(localtime.tm_year - <span class="number">1</span>) + <span class="string">'-'</span> + str(int(localtime.tm_year))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ddlxn = str(localtime.tm_year) + <span class="string">'-'</span> + str(int(localtime.tm_year) + <span class="number">1</span>)</span><br><span class="line">            ddlxq = <span class="string">'1'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ddlxn = str(int(localtime.tm_year) - <span class="number">1</span>) + <span class="string">'-'</span> + str(localtime.tm_year)</span><br><span class="line">            ddlxq = <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    setSemester()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        searchCount = <span class="number">1</span></span><br><span class="line">        print(<span class="string">'欢迎使用大连大学成绩查询助手！'</span>)</span><br><span class="line">        print(<span class="string">'正在检查网络...'</span>)</span><br><span class="line">        <span class="keyword">if</span> isConnected():</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">r''</span> + DstDir + <span class="string">'\\ScoreHelper\\uinfo.bin'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> file:</span><br><span class="line">                udick = pickle.load(file)</span><br><span class="line">                sname = udick[<span class="string">'sname'</span>]</span><br><span class="line">                sid = udick[<span class="string">'sid'</span>]</span><br><span class="line">                spwd = udick[<span class="string">'spwd'</span>]</span><br><span class="line">                email_send_to = udick[<span class="string">'email_send_to'</span>]</span><br><span class="line"></span><br><span class="line">            <span class="comment">#   构造登录地址</span></span><br><span class="line">            final_url = <span class="string">'http://'</span> + url_head + \</span><br><span class="line">                        check_for_redirects(<span class="string">'http://'</span> + url_head + <span class="string">'/default2.aspx'</span>)</span><br><span class="line">            final_url_head = final_url[<span class="number">0</span>:<span class="number">48</span>]</span><br><span class="line"></span><br><span class="line">            loginCount = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">not</span> login():</span><br><span class="line">                <span class="keyword">if</span> loginCount &gt; <span class="number">3</span>:</span><br><span class="line">                    <span class="comment">#   超过三次未登录自动更换网址</span></span><br><span class="line">                    url_head = <span class="string">"202.199.155."</span> + str(random.randint(<span class="number">33</span>, <span class="number">37</span>))</span><br><span class="line">                    final_url = <span class="string">'http://'</span> + url_head + \</span><br><span class="line">                                check_for_redirects(<span class="string">'http://'</span> + url_head + <span class="string">'/default2.aspx'</span>)</span><br><span class="line">                    final_url_head = final_url[<span class="number">0</span>:<span class="number">48</span>]</span><br><span class="line">                    loginCount = <span class="number">0</span></span><br><span class="line">                loginCount += <span class="number">1</span></span><br><span class="line">                print(<span class="string">"正在等待重试..."</span>)</span><br><span class="line">                time.sleep(<span class="number">3</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            get_RequiredCourse_num()</span><br><span class="line">            getScore()</span><br><span class="line">            counter = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> scorenum &lt;= required_course_num:</span><br><span class="line">                counter += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> scorenum == required_course_num:</span><br><span class="line">                    print(<span class="string">"本学期成绩查询完成！"</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">if</span> counter &gt; <span class="number">0</span>:</span><br><span class="line">                    getScore()</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="comment"># if os.path.exists(r'' + DstDir + '\\ScoreHelper'):</span></span><br><span class="line">        <span class="comment">#     os.remove(r'' + DstDir + '\\ScoreHelper')</span></span><br><span class="line">        os.mkdir(<span class="string">r''</span> + DstDir + <span class="string">'\\ScoreHelper'</span>)  <span class="comment"># 注：针对Windows目录结构</span></span><br><span class="line">        print(<span class="string">'这是你第一次使用，请按提示输入信息，以后可不必再次输入~'</span>)</span><br><span class="line">        sid = input(<span class="string">'请输入学号：'</span>)</span><br><span class="line">        sname = input(<span class="string">'请输入姓名：'</span>)</span><br><span class="line">        <span class="comment"># 隐藏密码</span></span><br><span class="line">        <span class="comment"># spwd = getpass.getpass('请输入密码：')</span></span><br><span class="line">        spwd = input(<span class="string">'请输入密码：'</span>)</span><br><span class="line">        email_send_to = input(<span class="string">'请输入要将成绩发送到的邮箱地址：'</span>)</span><br><span class="line">        udick = &#123;<span class="string">'sname'</span>: sname, <span class="string">'sid'</span>: sid,</span><br><span class="line">                 <span class="string">'spwd'</span>: spwd, <span class="string">'email_send_to'</span>: email_send_to&#125;</span><br><span class="line">        file = open(<span class="string">r''</span> + DstDir + <span class="string">'\\ScoreHelper\\uinfo.bin'</span>, <span class="string">'wb'</span>)</span><br><span class="line">        pickle.dump(udick, file)</span><br><span class="line">        file.close()</span><br><span class="line">        final_url = <span class="string">'http://'</span> + url_head + \</span><br><span class="line">                    check_for_redirects(<span class="string">'http://'</span> + url_head + <span class="string">'/default2.aspx'</span>)</span><br><span class="line">        final_url_head = final_url[<span class="number">0</span>:<span class="number">48</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">#   登录失败，重试</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> login():</span><br><span class="line">            sname = input(<span class="string">'请输入姓名：'</span>)</span><br><span class="line">            sid = input(<span class="string">'请输入学号：'</span>)</span><br><span class="line">            <span class="comment"># spwd = getpass.getpass('请输入密码：')</span></span><br><span class="line">            spwd = input(<span class="string">'请输入密码：'</span>)</span><br><span class="line">            email_send_to = input(<span class="string">'请输入要将成绩发送到的邮箱地址：'</span>)</span><br><span class="line">            udick = &#123;<span class="string">'sname'</span>: sname, <span class="string">'sid'</span>: sid,</span><br><span class="line">                     <span class="string">'spwd'</span>: spwd, <span class="string">'email_send_to'</span>: email_send_to&#125;</span><br><span class="line">            file = open(<span class="string">r''</span> + DstDir + <span class="string">'\\ScoreHelper\\uinfo.bin'</span>, <span class="string">'wb'</span>)</span><br><span class="line">            pickle.dump(udick, file)</span><br><span class="line">            file.close()</span><br><span class="line">            final_url = <span class="string">'http://'</span> + url_head + \</span><br><span class="line">                        check_for_redirects(<span class="string">'http://'</span> + url_head + <span class="string">'/default2.aspx'</span>)</span><br><span class="line">            final_url_head = final_url[<span class="number">0</span>:<span class="number">48</span>]</span><br><span class="line">        get_RequiredCourse_num()</span><br><span class="line">        getScore()</span><br><span class="line">        counter = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> scorenum &lt;= required_course_num:</span><br><span class="line">            counter += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> scorenum == required_course_num:</span><br><span class="line">                print(<span class="string">"本学期成绩查询完成！"</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> counter &gt; <span class="number">0</span>:</span><br><span class="line">                getScore()</span><br><span class="line">            print(scorenum)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> subprocess.CalledProcessError:</span><br><span class="line">        print(<span class="string">"网络连接不正常！请检查网络！"</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        print(<span class="string">"失败！可能是你没有完成教学评价！没有完成教学评价则无法查看成绩！或用户中途取消或网络故障。"</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># if os.path.exists(r'' + DstDir + '\\ScoreHelper\\CheckCode.jpg'):</span></span><br><span class="line">        <span class="comment">#     os.remove(r'' + DstDir + '\\ScoreHelper\\CheckCode.jpg')</span></span><br><span class="line">        print(<span class="string">"程序将在3秒后退出..."</span>)</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img data-src="/images/Screenshot2018-12-29-00-11.png" alt="" title="电脑端运行截图"></p><p><img data-src="/images/Screenshot_2018-07-26-16-10-33-543_com.netease.mo.png" alt="" title="该学期最后一次查询发送成功 截图"></p><p><img data-src="/images/Screenshot_2018-12-29-00-00-27-699_com.netease.mo.png" alt="" title="最近一次运行截图"></p><h1 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h1><ul><li><p>当百度云识别不成功时，为了防止网页错误，我设置了3秒间隔重试登录</p></li><li><p>当多次识别不成功时，程序可能结束</p></li><li><p>关于自动判断学期的功能，我是根据我个人的毕业时间来算的结束监控的年月日期，请按需修改</p></li><li><p>当教务网关闭以及断网的时候本程序就不灵了。。。</p></li><li><p>由于session有时间限制，所以每隔一段时间（约27小时）就要重新登录</p></li></ul><h1 id="本程序需要改进的一些功能"><a href="#本程序需要改进的一些功能" class="headerlink" title="本程序需要改进的一些功能"></a>本程序需要改进的一些功能</h1><ul><li>程序被停止后需要立即重新运行（在完善中）</li></ul><h1 id="修复日志"><a href="#修复日志" class="headerlink" title="修复日志"></a>修复日志</h1><ul><li>2019-1-2 修复日期计算错误的问题</li></ul><hr><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><h2 id="新增python控制自动运行-bat文件功能，使程序得以无休止运行"><a href="#新增python控制自动运行-bat文件功能，使程序得以无休止运行" class="headerlink" title="新增python控制自动运行.bat文件功能，使程序得以无休止运行"></a>新增python控制自动运行.bat文件功能，使程序得以无休止运行</h2><ul><li><p>battle.bat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off </span><br><span class="line"></span><br><span class="line">cd  ./</span><br><span class="line"></span><br><span class="line">start python 成绩监控并推送.py</span><br></pre></td></tr></table></figure></li><li><p>startpy.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># startpy.py</span></span><br><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">doSth</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 把爬虫程序放在这个类里</span></span><br><span class="line">    print(<span class="string">'这个程序要开始疯狂的运转啦'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">            command = path + <span class="string">'/battle.bat'</span></span><br><span class="line">            os.system(command)</span><br><span class="line">    <span class="keyword">except</span> (IOError, Exception) <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    path = os.getcwd()</span><br><span class="line"></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    timeCount = <span class="number">0</span></span><br><span class="line">    doSth()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> timeCount &lt; <span class="number">27</span>:</span><br><span class="line">        timeCount += <span class="number">1</span></span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">        print(<span class="string">"程序第"</span>,end=<span class="string">""</span>)</span><br><span class="line">        print(count,end=<span class="string">""</span>)</span><br><span class="line">        print(<span class="string">"次执行"</span>)</span><br><span class="line">        <span class="keyword">if</span> timeCount == <span class="number">27</span>:</span><br><span class="line">            timeCount = <span class="number">0</span></span><br><span class="line">            <span class="comment"># doSth()</span></span><br><span class="line">        <span class="comment"># 每隔1小时检测一次</span></span><br><span class="line">        time.sleep(<span class="number">3600</span>)</span><br></pre></td></tr></table></figure></li><li>startpy.py运行截图：<br><img data-src="/images/screenshot2019-01-13-18-59.png" alt=""></li></ul><h1 id="更新-1"><a href="#更新-1" class="headerlink" title="更新"></a>更新</h1><h2 id="更新-2019-2-12"><a href="#更新-2019-2-12" class="headerlink" title="更新(2019-2-12)"></a>更新(2019-2-12)</h2><h3 id="将验证码图片颜色翻转，提高识别准确率"><a href="#将验证码图片颜色翻转，提高识别准确率" class="headerlink" title="将验证码图片颜色翻转，提高识别准确率"></a>将验证码图片颜色翻转，提高识别准确率</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#   图像转换并识别</span><br><span class="line">def image_util(img):</span><br><span class="line">    new_im = img.convert(&quot;RGB&quot;)  # 将验证码图片转换成24位图片</span><br><span class="line">    new_im.save(&apos;&apos; + DstDir + &apos;\\ScoreHelper\\CheckCode1.jpg&apos;)  # 将24位图片保存到本地</span><br><span class="line"></span><br><span class="line">    arr = np.array(Image.open(&apos;&apos; + DstDir + &apos;\\ScoreHelper\\CheckCode1.jpg&apos;).convert(&quot;L&quot;))</span><br><span class="line"></span><br><span class="line">    b = 255 - arr</span><br><span class="line">    im = Image.fromarray(b.astype(&apos;uint8&apos;))  # 翻转</span><br><span class="line"></span><br><span class="line">    # d = 255 * (arr / 255) ** 2</span><br><span class="line">    # im = Image.fromarray(d.astype(&apos;uint8&apos;))  # 灰度</span><br><span class="line"></span><br><span class="line">    #  此处验证过，翻转比灰度识别率更高</span><br><span class="line">    im.save(&apos;&apos; + DstDir + &apos;\\ScoreHelper\\CheckCode2.jpg&apos;)</span><br></pre></td></tr></table></figure><h2 id="更新-2019-2-15"><a href="#更新-2019-2-15" class="headerlink" title="更新(2019-2-15)"></a>更新(2019-2-15)</h2><h3 id="更改重试次数限制，当出现三次登录不成功时，更换网址重新登录"><a href="#更改重试次数限制，当出现三次登录不成功时，更换网址重新登录" class="headerlink" title="更改重试次数限制，当出现三次登录不成功时，更换网址重新登录"></a>更改重试次数限制，当出现三次登录不成功时，更换网址重新登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    ...</span><br><span class="line">    loginCount = 0</span><br><span class="line">    while not login():</span><br><span class="line">    if loginCount &gt; 3:</span><br><span class="line">        #   超过三次未登录自动更换网址</span><br><span class="line">        url_head = &quot;202.199.155.&quot; + str(random.randint(33, 37))</span><br><span class="line">        final_url = &apos;http://&apos; + url_head + \</span><br><span class="line">                    check_for_redirects(&apos;http://&apos; + url_head + &apos;/default2.aspx&apos;)</span><br><span class="line">        final_url_head = final_url[0:48]</span><br><span class="line">        loginCount = 0</span><br><span class="line">    loginCount += 1</span><br><span class="line">    print(&quot;正在等待重试...&quot;)</span><br><span class="line">    time.sleep(3)</span><br><span class="line">    continue</span><br><span class="line"></span><br><span class="line">    get_RequiredCourse_num()</span><br><span class="line">    getScore()</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;本程序模拟登录正方教务系统获取本人当前学期成绩（也可以手动改学期学年），20分钟检测一次，当有新成绩公布时就发送到邮箱，本程序用到的是我学校的教务网网址。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本项目GitHub地址&lt;a href=&quot;https://github.com/0202zc/grade_sender&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;大连大学成绩监控查询脚本&lt;/a&gt;
    
    </summary>
    
      <category term="Python学习" scheme="http://0202zc.github.io/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="网络爬虫" scheme="http://0202zc.github.io/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python 3.6 监控爬取成绩并推送到邮箱</title>
    <link href="http://0202zc.github.io/2018/07/25/Python-3-6-%E7%9B%91%E6%8E%A7%E7%88%AC%E5%8F%96%E6%88%90%E7%BB%A9%E5%B9%B6%E6%8E%A8%E9%80%81%E5%88%B0%E9%82%AE%E7%AE%B1/"/>
    <id>http://0202zc.github.io/2018/07/25/Python-3-6-监控爬取成绩并推送到邮箱/</id>
    <published>2018-07-25T08:34:10.000Z</published>
    <updated>2020-01-19T03:01:18.051Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>本程序模拟登录正方教务系统获取本人当前学期成绩（也可以手动改学期学年），20分钟检测一次，当有新成绩公布时就发送到邮箱，本程序用到的是我学校的教务网网址。<a id="more"></a></p><ul><li>由于正方网页的每一项都需要cookie来进行访问，在用Chrome单独打开子页面时，网页会直接跳到登录前界面。在用调试查看了post后，发现cookie消失了；但是直接从网页上打开子网页可以访问。所以在登录时就要保存登录信息cookie。</li><li>爬取部分是根据网上代码内容修改的，后面的监控和发送是自己完成的。</li><li>本程序测试了多次修改了许许多多的bug，终于得以发布。</li><li>该程序的发送邮箱部分需要用到Python SMTP功能，具体可参照<em>xsan</em>的<a href="https://www.cnblogs.com/xshan/p/7954317.html" target="_blank" rel="noopener">python3通过qq邮箱发送邮件</a></li><li>教务系统网址防止访问重复冲突，在后面加了一串hash码，所有的网址一定要带上它，这样才能访问到登录后的界面，否则没有cookie。</li><li>开头要求用户输入本学期所有考试数目，包括重修、公选、跨选等课程，目的是在最后一次推送前将平均绩点算出并发送到邮箱。</li></ul><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">大连大学成绩查询助手V3.5</span></span><br><span class="line"><span class="string">Coded By Martin Huang</span></span><br><span class="line"><span class="string">Code Changed By ZC Liang</span></span><br><span class="line"><span class="string">2018.6.6</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> http.cookiejar</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"><span class="keyword">import</span> getpass</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> prettytable <span class="keyword">import</span> PrettyTable</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.utils <span class="keyword">import</span> formataddr</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> prettytable <span class="keyword">as</span> pt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">my_sender = <span class="string">'发件人邮箱账号'</span>    <span class="comment"># 发件人邮箱账号</span></span><br><span class="line">my_pass = <span class="string">'发件人邮箱密码'</span>              <span class="comment"># 发件人邮箱密码(当时申请smtp给的口令)</span></span><br><span class="line"><span class="comment"># my_user = '收件人邮箱账号'      # 收件人邮箱账号，我这边发送给自己</span></span><br><span class="line">email_send_to = <span class="string">''</span>                <span class="comment"># 收件人邮箱账号</span></span><br><span class="line"></span><br><span class="line">DstDir = os.getcwd()</span><br><span class="line">searchCount = <span class="number">0</span>  <span class="comment"># 查询次数</span></span><br><span class="line">count = <span class="number">0</span>  <span class="comment"># 循环计数</span></span><br><span class="line">scorenum = <span class="number">0</span>  <span class="comment"># 成绩条数</span></span><br><span class="line">score = []</span><br><span class="line">scorenp = np.array(score)</span><br><span class="line">makeup_course_num = <span class="number">0</span>  <span class="comment"># 重修课程数目</span></span><br><span class="line">makeup_course_flag = <span class="number">-1</span>  <span class="comment"># 重修课程数目下标</span></span><br><span class="line">courseList = []</span><br><span class="line">required_course_num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 准备Cookie和opener，因为cookie存于opener中，所以以下所有网页操作全部要基于同一个opener</span></span><br><span class="line">cookie = http.cookiejar.CookieJar()</span><br><span class="line">opener = urllib.request.build_opener(</span><br><span class="line">    urllib.request.HTTPCookieProcessor(cookie))</span><br><span class="line"></span><br><span class="line">final_url = <span class="string">""</span>      <span class="comment"># 头 + 随机编码 + default2.aspx</span></span><br><span class="line">final_url_head = <span class="string">""</span></span><br><span class="line">url_head = <span class="string">"202.199.155."</span> + str(random.randint(<span class="number">33</span>, <span class="number">37</span>))     <span class="comment"># 随机产生网址</span></span><br><span class="line"></span><br><span class="line">ddlxn = <span class="string">""</span></span><br><span class="line">ddlxq = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断操作系统类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getOpeningSystem</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> platform.system()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断是否联网</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isConnected</span><span class="params">()</span>:</span></span><br><span class="line">    userOs = getOpeningSystem()</span><br><span class="line">    <span class="keyword">if</span> userOs == <span class="string">"Windows"</span>:</span><br><span class="line">        subprocess.check_call(</span><br><span class="line">            [<span class="string">"ping"</span>, <span class="string">"-n"</span>, <span class="string">"2"</span>, url_head], stdout=subprocess.PIPE)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        subprocess.check_call(</span><br><span class="line">            [<span class="string">"ping"</span>, <span class="string">"-c"</span>, <span class="string">"2"</span>, url_head], stdout=subprocess.PIPE)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取重定向编码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_for_redirects</span><span class="params">(url)</span>:</span></span><br><span class="line">    r = requests.head(url)</span><br><span class="line">    <span class="keyword">if</span> r.ok:</span><br><span class="line">        <span class="keyword">return</span> r.headers[<span class="string">'location'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'[no redirect]'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   登陆</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 构造表单</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">'txtUserName'</span>: sid,</span><br><span class="line">        <span class="string">'Textbox1'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'Textbox2'</span>: spwd,</span><br><span class="line">        <span class="string">'RadioButtonList1'</span>: <span class="string">'学生'</span>,</span><br><span class="line">        <span class="string">'Button1'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'lbLanguage'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'hidPdrs'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'hidsc'</span>: <span class="string">''</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#   获取验证码</span></span><br><span class="line">    res = opener.open(final_url_head + <span class="string">'/checkcode.aspx'</span>).read()</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">''</span> + DstDir + <span class="string">'\\ScoreHelper\\CheckCode.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(res)</span><br><span class="line">    img = Image.open(<span class="string">''</span> + DstDir + <span class="string">'\\ScoreHelper\\CheckCode.jpg'</span>)</span><br><span class="line">    img.show()</span><br><span class="line">    vcode = input(<span class="string">'请输入验证码：'</span>)</span><br><span class="line">    img.close()</span><br><span class="line">    params[<span class="string">'txtSecretCode'</span>] = vcode</span><br><span class="line">    <span class="comment">#   获取ViewState</span></span><br><span class="line">    response = urllib.request.urlopen(<span class="string">'http://'</span> + url_head + <span class="string">'/'</span>)</span><br><span class="line">    html = response.read().decode(<span class="string">'gb2312'</span>)</span><br><span class="line">    viewstate = re.search(</span><br><span class="line">        <span class="string">'&lt;input type="hidden" name="__VIEWSTATE" value="(.+?)"'</span>, html)</span><br><span class="line">    params[<span class="string">'__VIEWSTATE'</span>] = viewstate.group(<span class="number">1</span>)</span><br><span class="line">    <span class="comment">#   尝试登陆</span></span><br><span class="line">    loginurl = final_url</span><br><span class="line">    print(<span class="string">"\n本次登录所用网址为："</span> + loginurl + <span class="string">"\n"</span>)</span><br><span class="line">    data = urllib.parse.urlencode(params).encode(<span class="string">'gb2312'</span>)</span><br><span class="line">    response = opener.open(loginurl, data)</span><br><span class="line">    <span class="keyword">if</span> response.geturl() == final_url:</span><br><span class="line">        print(<span class="string">'登陆失败，可能是姓名、学号、密码、验证码填写错误！'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   获取本学期必修课数目</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_RequiredCourse_num</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> required_course_num</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"正在查询本学期必修课数目..."</span>)</span><br><span class="line">    <span class="comment">#   构造url</span></span><br><span class="line">    url = <span class="string">''</span>.join([</span><br><span class="line">        final_url_head + <span class="string">'/xsxkqk.aspx'</span>,</span><br><span class="line">        <span class="string">'?xh='</span>,</span><br><span class="line">        sid,</span><br><span class="line">        <span class="string">'&amp;xm='</span>,</span><br><span class="line">        urllib.parse.quote(sname),</span><br><span class="line">        <span class="string">'&amp;gnmkdm=N121615'</span>,</span><br><span class="line">    ])</span><br><span class="line">    <span class="comment">#   构建查询学生选课情况表单</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">'ddlxn'</span>: ddlxn,</span><br><span class="line">        <span class="string">'ddlxq'</span>: ddlxq,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#   构造Request对象，填入Header，防止302跳转，获取新的View_State</span></span><br><span class="line">    req = urllib.request.Request(url)</span><br><span class="line">    req.add_header(<span class="string">'Referer'</span>, final_url)</span><br><span class="line">    req.add_header(<span class="string">'Origin'</span>, <span class="string">'http://'</span> + url_head + <span class="string">'/'</span>)</span><br><span class="line">    req.add_header(</span><br><span class="line">        <span class="string">'User-Agent'</span>, <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36'</span>)</span><br><span class="line">    response = opener.open(req)</span><br><span class="line">    html = response.read().decode(<span class="string">'gb2312'</span>)</span><br><span class="line">    viewstate = re.search(</span><br><span class="line">        <span class="string">'&lt;input type="hidden" name="__VIEWSTATE" value="(.+?)"'</span>, html)</span><br><span class="line">    params[<span class="string">'__VIEWSTATE'</span>] = viewstate.group(<span class="number">1</span>)</span><br><span class="line">    <span class="comment">#   查询所有成绩</span></span><br><span class="line">    req = urllib.request.Request(</span><br><span class="line">        url, urllib.parse.urlencode(params).encode(<span class="string">'gb2312'</span>))</span><br><span class="line">    req.add_header(<span class="string">'Referer'</span>, final_url)</span><br><span class="line">    req.add_header(<span class="string">'Origin'</span>, <span class="string">'http://'</span> + url_head + <span class="string">'/'</span>)</span><br><span class="line">    response = opener.open(req)</span><br><span class="line">    soup = BeautifulSoup(response.read().decode(<span class="string">'gb2312'</span>), <span class="string">'html.parser'</span>)</span><br><span class="line">    html = soup.find(<span class="string">'table'</span>, class_=<span class="string">'datelist'</span>)</span><br><span class="line">    <span class="comment">#   指定要输出的列，原网页的表格列下标从0开始</span></span><br><span class="line">    <span class="comment">#   用于标记是否是遍历第一行</span></span><br><span class="line">    flag = <span class="keyword">True</span></span><br><span class="line">    <span class="comment">#   根据DOM解析所要数据，首位的each是NavigatableString对象，其余为Tag对象</span></span><br><span class="line">    <span class="comment">#   遍历行</span></span><br><span class="line">    counter = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> html:</span><br><span class="line">        columnCounter = <span class="number">0</span></span><br><span class="line">        column = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(type(each) == bs4.element.NavigableString):</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">#   遍历列</span></span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> each.contents:</span><br><span class="line">                <span class="keyword">if</span>(item != <span class="string">'\n'</span>):</span><br><span class="line">                    <span class="keyword">if</span>(counter&gt;<span class="number">0</span> <span class="keyword">and</span> columnCounter == <span class="number">3</span>):</span><br><span class="line">                        courseList.append(str(item.contents[<span class="number">0</span>]).strip())</span><br><span class="line">                    columnCounter += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> flag:</span><br><span class="line">                flag = <span class="keyword">False</span></span><br><span class="line">            counter += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> courseList:</span><br><span class="line">        <span class="keyword">if</span>(each == <span class="string">"必修课程"</span>):</span><br><span class="line">            required_course_num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   获取成绩</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getScore</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> searchCount</span><br><span class="line">    <span class="keyword">global</span> scorenum</span><br><span class="line">    <span class="keyword">global</span> scorenp</span><br><span class="line">    <span class="keyword">global</span> ddlxn</span><br><span class="line">    <span class="keyword">global</span> ddlxq</span><br><span class="line">    score = []</span><br><span class="line">    <span class="comment">#   构造url</span></span><br><span class="line">    url = <span class="string">''</span>.join([</span><br><span class="line">        final_url_head + <span class="string">'/xscjcx_dq.aspx'</span>,</span><br><span class="line">        <span class="string">'?xh='</span>,</span><br><span class="line">        sid,</span><br><span class="line">        <span class="string">'&amp;xm='</span>,</span><br><span class="line">        urllib.parse.quote(sname),</span><br><span class="line">        <span class="string">'&amp;gnmkdm=N121605'</span>,</span><br><span class="line">    ])</span><br><span class="line">    <span class="comment">#   构建查询全部成绩表单</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">'ddlxn'</span>: ddlxn,  <span class="comment"># 全部为 %C8%AB%B2%BF</span></span><br><span class="line">        <span class="string">'ddlxq'</span>: ddlxq,</span><br><span class="line">        <span class="string">'btnCx'</span>: <span class="string">'+%B2%E9++%D1%AF+'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#   构造Request对象，填入Header，防止302跳转，获取新的View_State</span></span><br><span class="line">    req = urllib.request.Request(url)</span><br><span class="line">    req.add_header(<span class="string">'Referer'</span>, final_url)</span><br><span class="line">    req.add_header(<span class="string">'Origin'</span>, <span class="string">'http://'</span> + url_head + <span class="string">'/'</span>)</span><br><span class="line">    req.add_header(</span><br><span class="line">        <span class="string">'User-Agent'</span>, <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36'</span>)</span><br><span class="line">    response = opener.open(req)</span><br><span class="line">    html = response.read().decode(<span class="string">'gb2312'</span>)</span><br><span class="line">    viewstate = re.search(</span><br><span class="line">        <span class="string">'&lt;input type="hidden" name="__VIEWSTATE" value="(.+?)"'</span>, html)</span><br><span class="line">    params[<span class="string">'__VIEWSTATE'</span>] = viewstate.group(<span class="number">1</span>)</span><br><span class="line">    <span class="comment">#   查询所有成绩</span></span><br><span class="line">    req = urllib.request.Request(</span><br><span class="line">        url, urllib.parse.urlencode(params).encode(<span class="string">'gb2312'</span>))</span><br><span class="line">    req.add_header(<span class="string">'Referer'</span>, final_url)</span><br><span class="line">    req.add_header(<span class="string">'Origin'</span>, <span class="string">'http://'</span> + url_head + <span class="string">'/'</span>)</span><br><span class="line">    response = opener.open(req)</span><br><span class="line">    soup = BeautifulSoup(response.read().decode(<span class="string">'gb2312'</span>), <span class="string">'html.parser'</span>)</span><br><span class="line">    html = soup.find(<span class="string">'table'</span>, class_=<span class="string">'datelist'</span>)</span><br><span class="line">    print(<span class="string">"执行第"</span> + str(searchCount) + <span class="string">"次查询："</span>)</span><br><span class="line">    print(<span class="string">'你的所有成绩如下：'</span>)</span><br><span class="line">    <span class="comment">#   指定要输出的列，原网页的表格列下标从0开始</span></span><br><span class="line">    outColumn = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>]</span><br><span class="line">    <span class="comment">#   用于标记是否是遍历第一行</span></span><br><span class="line">    flag = <span class="keyword">True</span></span><br><span class="line">    <span class="comment">#   根据DOM解析所要数据，首位的each是NavigatableString对象，其余为Tag对象</span></span><br><span class="line">    <span class="comment">#   遍历行</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> html:</span><br><span class="line">        columnCounter = <span class="number">0</span></span><br><span class="line">        column = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(type(each) == bs4.element.NavigableString):</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">#   遍历列</span></span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> each.contents:</span><br><span class="line">                <span class="keyword">if</span>(item != <span class="string">'\n'</span>):</span><br><span class="line">                    <span class="keyword">if</span> columnCounter <span class="keyword">in</span> outColumn:</span><br><span class="line">                        <span class="comment">#   要使用str转换，不然陷入copy与deepcopy的无限递归</span></span><br><span class="line">                        column.append(str(item.contents[<span class="number">0</span>]).strip())</span><br><span class="line">                    columnCounter += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> flag:</span><br><span class="line">                table = PrettyTable(column)</span><br><span class="line">                flag = <span class="keyword">False</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                table.add_row(column)</span><br><span class="line">            score.extend([column])</span><br><span class="line">    searchCount += <span class="number">1</span></span><br><span class="line">    scorenp = np.array(score)</span><br><span class="line">    <span class="comment">#   table.set_style(pt.PLAIN_COLUMNS)</span></span><br><span class="line">    print(table)</span><br><span class="line">    print(<span class="string">"分条统计："</span>)</span><br><span class="line">    scorenum = sendScore(table)</span><br><span class="line">    print(<span class="string">"成绩数目: "</span> + str(scorenum) + <span class="string">"条"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendScore</span><span class="params">(table)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> scorenum</span><br><span class="line">    <span class="keyword">global</span> count</span><br><span class="line">    <span class="keyword">global</span> email_send_to</span><br><span class="line">    <span class="keyword">global</span> scorenp</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> table:</span><br><span class="line">        print(i.get_string())</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(count &gt; scorenum):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            scorenum = count</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 文本模式</span></span><br><span class="line">            <span class="comment"># context = i.get_string().replace("+"," ")</span></span><br><span class="line">            <span class="comment"># context = context.replace("-"," ")</span></span><br><span class="line">            <span class="comment"># context = context.replace("2017 2018","2017-2018")</span></span><br><span class="line">            <span class="comment"># if(scorenum == 1):</span></span><br><span class="line">            <span class="comment">#     msg=MIMEText("有成绩下来了：" + context,'plain','utf-8')</span></span><br><span class="line">            <span class="comment"># else:</span></span><br><span class="line">            <span class="comment">#     msg=MIMEText("又有成绩下来了：" + context,'plain','utf-8')</span></span><br><span class="line">            <span class="comment"># msg = prettyScore()</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># html格式</span></span><br><span class="line">            msg = prettyScore()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 括号里的对应发件人邮箱昵称、发件人邮箱账号</span></span><br><span class="line">            msg[<span class="string">'From'</span>] = formataddr([<span class="string">"1115810371@qq.com"</span>, my_sender])</span><br><span class="line">            <span class="comment"># 括号里的对应收件人邮箱昵称、收件人邮箱账号</span></span><br><span class="line">            msg[<span class="string">'To'</span>] = formataddr([email_send_to, email_send_to])</span><br><span class="line">            <span class="keyword">if</span>(count == required_course_num):</span><br><span class="line">                msg[<span class="string">'Subject'</span>] = <span class="string">"第"</span> + \</span><br><span class="line">                    str(count) + <span class="string">"次成绩推送加平均绩点"</span>  <span class="comment"># 邮件的主题，也可以说是标题</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                msg[<span class="string">'Subject'</span>] = <span class="string">"第"</span> + str(count) + <span class="string">"次成绩推送"</span>  <span class="comment"># 邮件的主题，也可以说是标题</span></span><br><span class="line">            <span class="comment"># 发件人邮箱中的SMTP服务器，端口是465</span></span><br><span class="line">            server = smtplib.SMTP_SSL(<span class="string">"smtp.qq.com"</span>, <span class="number">465</span>)</span><br><span class="line">            server.login(my_sender, my_pass)  <span class="comment"># 括号中对应的是发件人邮箱账号、邮箱密码</span></span><br><span class="line">            <span class="comment"># 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件</span></span><br><span class="line">            server.sendmail(my_sender, [email_send_to, ], msg.as_string())</span><br><span class="line">            server.quit()  <span class="comment"># 关闭连接</span></span><br><span class="line">            print(<span class="string">"发送成功，请注意在此邮箱查收："</span> + email_send_to)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">            print(<span class="string">"发送失败"</span>)</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span>(scorenum != required_course_num):</span><br><span class="line">        print(<span class="string">"程序休息中...（按'Ctrl C'结束）"</span>)</span><br><span class="line">        time.sleep(<span class="number">1200</span>)  <span class="comment"># 二十分钟查一次</span></span><br><span class="line">    <span class="keyword">return</span> scorenum</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prettyScore</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> scorenp</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># context = MIMEText(html,_subtype='html',_charset='utf-8')  #解决乱码</span></span><br><span class="line">        msg = MIMEText(str(htmlText(scorenum)), <span class="string">"html"</span>, <span class="string">"gb2312"</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">    <span class="keyword">return</span> msg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">htmlText</span><span class="params">(scorenum)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> required_course_num</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(scorenum == required_course_num):</span><br><span class="line">        html = <span class="string">"""</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                        &lt;table color="CCCC33" width="800" border="1" cellspacing="0" cellpadding="5" text-align="center"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;tr&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;课程名称&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;课程性质&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;学分&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;平时成绩&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;期末成绩&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;成绩&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;/tr&gt;   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                    """</span> + addtrs(scorenum) + <span class="string">"""</span></span><br><span class="line"><span class="string">                        &lt;/table&gt;</span></span><br><span class="line"><span class="string">                        &lt;div&gt;&lt;h2&gt;--&gt;平均绩点：%s --&lt;&lt;/h2&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    """</span> % (getGPA())</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        html = <span class="string">"""</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                        &lt;table color="CCCC33" width="800" border="1" cellspacing="0" cellpadding="5" text-align="center"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;tr&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;课程名称&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;课程性质&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;学分&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;平时成绩&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;期末成绩&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                        &lt;td text-align="center"&gt;成绩&lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;/tr&gt;   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                    """</span> + addtrs(scorenum)</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addtrs</span><span class="params">(scorenum)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> scorenp</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    array = []</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= scorenum):</span><br><span class="line">        trs = <span class="string">'''</span></span><br><span class="line"><span class="string">                        &lt;tr&gt;   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;td text-align="center"&gt;%s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s &lt;/td&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                        &lt;/tr&gt;</span></span><br><span class="line"><span class="string">            '''</span> % (scorenp[i][<span class="number">0</span>], scorenp[i][<span class="number">1</span>], scorenp[i][<span class="number">2</span>], scorenp[i][<span class="number">3</span>], scorenp[i][<span class="number">4</span>], scorenp[i][<span class="number">5</span>])</span><br><span class="line">        array.append(trs)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    s = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> array:</span><br><span class="line">        s += str(x)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getGPA</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> scorenp</span><br><span class="line">    <span class="keyword">global</span> scorenum</span><br><span class="line">    <span class="keyword">global</span> makeup_course_num</span><br><span class="line">    <span class="keyword">global</span> makeup_course_flag</span><br><span class="line"></span><br><span class="line">    sc = []</span><br><span class="line">    GPAlist = []</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    coursenum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= scorenum):</span><br><span class="line">        <span class="keyword">if</span>(scorenp[i][<span class="number">1</span>] != <span class="string">"必修课程"</span> <span class="keyword">or</span> scorenp[i][<span class="number">6</span>] == <span class="string">"是"</span>):</span><br><span class="line">            makeup_course_num += <span class="number">1</span></span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(scorenp[i][<span class="number">5</span>] == <span class="string">"F"</span>):</span><br><span class="line">                sc.append(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">elif</span>(scorenp[i][<span class="number">5</span>] == <span class="string">"A"</span>):</span><br><span class="line">                sc.append(<span class="number">95</span>)</span><br><span class="line">            <span class="keyword">elif</span>(scorenp[i][<span class="number">5</span>] == <span class="string">"B"</span>):</span><br><span class="line">                sc.append(<span class="number">85</span>)</span><br><span class="line">            <span class="keyword">elif</span>(scorenp[i][<span class="number">5</span>] == <span class="string">"C"</span>):</span><br><span class="line">                sc.append(<span class="number">75</span>)</span><br><span class="line">            <span class="keyword">elif</span>(scorenp[i][<span class="number">5</span>] == <span class="string">"D"</span>):</span><br><span class="line">                sc.append(<span class="number">65</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                sc.append(int(scorenp[i][<span class="number">5</span>]))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(int(sc[j]) &lt; <span class="number">60</span>):</span><br><span class="line">                GPAlist.append(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                GPAlist.append((int(sc[j]) - <span class="number">50</span>)/<span class="number">10</span>*float(scorenp[i][<span class="number">2</span>]))</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">            coursenum += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    scoresum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= scorenum):</span><br><span class="line">        <span class="keyword">if</span>(scorenp[i][<span class="number">1</span>] != <span class="string">"必修课程"</span> <span class="keyword">or</span> scorenp[i][<span class="number">6</span>] == <span class="string">"是"</span>):</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        sum += GPAlist[j]</span><br><span class="line">        scoresum += float(scorenp[i][<span class="number">2</span>])</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    GPA = sum/scoresum</span><br><span class="line">    print(<span class="string">"平均绩点："</span> + str(GPA))</span><br><span class="line">    <span class="keyword">return</span> GPA</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        localtime = time.localtime(time.time())     <span class="comment"># 获取当前日期</span></span><br><span class="line">        <span class="keyword">if</span>(int((localtime.tm_mon) &gt;= <span class="number">9</span> <span class="keyword">and</span> int(localtime.tm_mon) &lt;= <span class="number">12</span>) <span class="keyword">or</span> (int(localtime.tm_mon) &gt;= <span class="number">1</span> <span class="keyword">and</span> int(localtime.tm_mon) &lt;= <span class="number">2</span>)):</span><br><span class="line">            <span class="keyword">if</span>(str(localtime.tm_year) == <span class="string">"2020"</span>):</span><br><span class="line">                print(<span class="string">"您已毕业，无须监控成绩！"</span>)</span><br><span class="line">                sys.exit(<span class="number">0</span>)</span><br><span class="line">            ddlxn = str(localtime.tm_year) + <span class="string">'-'</span> + str(int(localtime.tm_year) + <span class="number">1</span>)</span><br><span class="line">            ddlxq = <span class="string">'1'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ddlxn = str(int(localtime.tm_year) - <span class="number">1</span>) + <span class="string">'-'</span> + str(localtime.tm_year)</span><br><span class="line">            ddlxq = <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line">        searchCount = <span class="number">1</span></span><br><span class="line">        print(<span class="string">'欢迎使用大连大学成绩查询助手！'</span>)</span><br><span class="line">        print(<span class="string">'正在检查网络...'</span>)</span><br><span class="line">        isConnected()</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">r''</span> + DstDir + <span class="string">'\\ScoreHelper\\uinfo.bin'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> file:</span><br><span class="line">            udick = pickle.load(file)</span><br><span class="line">            sname = udick[<span class="string">'sname'</span>]</span><br><span class="line">            sid = udick[<span class="string">'sid'</span>]</span><br><span class="line">            spwd = udick[<span class="string">'spwd'</span>]</span><br><span class="line">            email_send_to = udick[<span class="string">'email_send_to'</span>]</span><br><span class="line">        final_url = <span class="string">'http://'</span> + url_head + \</span><br><span class="line">            check_for_redirects(<span class="string">'http://'</span> + url_head + <span class="string">'/default2.aspx'</span>)</span><br><span class="line">        final_url_head = final_url[<span class="number">0</span>:<span class="number">48</span>]</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">not</span> login()):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        get_RequiredCourse_num()</span><br><span class="line">        getScore()</span><br><span class="line">        counter = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span>(scorenum &lt;= required_course_num):</span><br><span class="line">            counter += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span>(scorenum == required_course_num):</span><br><span class="line">                print(<span class="string">"本学期成绩查询完成！"</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span>(counter &gt; <span class="number">0</span>):</span><br><span class="line">                getScore()</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="comment"># if os.path.exists(r'' + DstDir + '\\ScoreHelper'):</span></span><br><span class="line">        <span class="comment">#     os.remove(r'' + DstDir + '\\ScoreHelper')</span></span><br><span class="line">        os.mkdir(<span class="string">r''</span> + DstDir + <span class="string">'\\ScoreHelper'</span>)  <span class="comment"># 注：针对Windows目录结构</span></span><br><span class="line">        print(<span class="string">'这是你第一次使用，请按提示输入信息，以后可不必再次输入~'</span>)</span><br><span class="line">        sid = input(<span class="string">'请输入学号：'</span>)</span><br><span class="line">        sname = input(<span class="string">'请输入姓名：'</span>)</span><br><span class="line">        <span class="comment"># 隐藏密码</span></span><br><span class="line">        <span class="comment"># spwd = getpass.getpass('请输入密码：')</span></span><br><span class="line">        spwd = input(<span class="string">'请输入密码：'</span>)</span><br><span class="line">        email_send_to = input(<span class="string">'请输入要将成绩发送到的邮箱地址：'</span>)</span><br><span class="line">        udick = &#123;<span class="string">'sname'</span>: sname, <span class="string">'sid'</span>: sid,</span><br><span class="line">                 <span class="string">'spwd'</span>: spwd, <span class="string">'email_send_to'</span>: email_send_to&#125;</span><br><span class="line">        file = open(<span class="string">r''</span> + DstDir + <span class="string">'\\ScoreHelper\\uinfo.bin'</span>, <span class="string">'wb'</span>)</span><br><span class="line">        pickle.dump(udick, file)</span><br><span class="line">        file.close()</span><br><span class="line">        final_url = <span class="string">'http://'</span> + url_head + \</span><br><span class="line">            check_for_redirects(<span class="string">'http://'</span> + url_head + <span class="string">'/default2.aspx'</span>)</span><br><span class="line">        final_url_head = final_url[<span class="number">0</span>:<span class="number">48</span>]</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">not</span> login()):</span><br><span class="line">            sname = input(<span class="string">'请输入姓名：'</span>)</span><br><span class="line">            sid = input(<span class="string">'请输入学号：'</span>)</span><br><span class="line">            <span class="comment"># spwd = getpass.getpass('请输入密码：')</span></span><br><span class="line">            spwd = input(<span class="string">'请输入密码：'</span>)</span><br><span class="line">            email_send_to = input(<span class="string">'请输入要将成绩发送到的邮箱地址：'</span>)</span><br><span class="line">            udick = &#123;<span class="string">'sname'</span>: sname, <span class="string">'sid'</span>: sid,</span><br><span class="line">                     <span class="string">'spwd'</span>: spwd, <span class="string">'email_send_to'</span>: email_send_to&#125;</span><br><span class="line">            file = open(<span class="string">r''</span> + DstDir + <span class="string">'\\ScoreHelper\\uinfo.bin'</span>, <span class="string">'wb'</span>)</span><br><span class="line">            pickle.dump(udick, file)</span><br><span class="line">            file.close()</span><br><span class="line">            final_url = <span class="string">'http://'</span> + url_head + \</span><br><span class="line">                check_for_redirects(<span class="string">'http://'</span> + url_head + <span class="string">'/default2.aspx'</span>)</span><br><span class="line">            final_url_head = final_url[<span class="number">0</span>:<span class="number">48</span>]</span><br><span class="line">            get_RequiredCourse_num()</span><br><span class="line">        getScore()</span><br><span class="line">        counter = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> (scorenum &lt;= required_course_num):</span><br><span class="line">            counter += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> (scorenum == required_course_num):</span><br><span class="line">                print(<span class="string">"本学期成绩查询完成！"</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> (counter &gt; <span class="number">0</span>):</span><br><span class="line">                getScore()</span><br><span class="line">            print(scorenum)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> subprocess.CalledProcessError:</span><br><span class="line">        print(<span class="string">"网络连接不正常！请检查网络！"</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"失败！可能是你没有完成教学评价！没有完成教学评价则无法查看成绩！或用户中途取消或网络故障。"</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># if os.path.exists(r'' + DstDir + '\\ScoreHelper\\CheckCode.jpg'):</span></span><br><span class="line">        <span class="comment">#     os.remove(r'' + DstDir + '\\ScoreHelper\\CheckCode.jpg')</span></span><br><span class="line">        print(<span class="string">"程序将在3秒后退出..."</span>)</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>当教务网关闭以及断网的时候本程序就不灵了。。。</p></li><li><p>由于session有时间限制，所以每隔一段时间（约27小时）就要重新登录</p></li><li><p>最后一次发送成功 截图：<br><img data-src="/images/Screenshot_2018-07-26-16-10-33-543_com.netease.mo.png" alt=""></p></li><li><p>2018-09-25新增——自动获取本学期必修课总数</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;本程序模拟登录正方教务系统获取本人当前学期成绩（也可以手动改学期学年），20分钟检测一次，当有新成绩公布时就发送到邮箱，本程序用到的是我学校的教务网网址。
    
    </summary>
    
      <category term="Python学习" scheme="http://0202zc.github.io/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="网络爬虫" scheme="http://0202zc.github.io/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理笔记</title>
    <link href="http://0202zc.github.io/2018/05/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/"/>
    <id>http://0202zc.github.io/2018/05/21/计算机组成原理笔记/</id>
    <published>2018-05-21T11:35:32.000Z</published>
    <updated>2020-01-19T03:02:46.289Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、计算机系统概述"><a href="#一、计算机系统概述" class="headerlink" title="一、计算机系统概述"></a>一、计算机系统概述</h1><p><strong>计算机由五部分组成</strong>：控制器，存储器，运算器，输入设备，输出设备<br><a id="more"></a><br><strong>系统结构</strong>：计算机系统对各级之间界面的定义，及其上下功能分配。各级都有自己的系统结构，各级之间存在透明性（确实存在，但无法监测设置）  </p><p><strong>计算机组成</strong>是指计算机系统结构的逻辑实现，包括 机器级内的数据通道和控制信号的组成及逻辑设计，他着眼于机器级内各事件的时序方式与控制机构，各部件功能及相互联系  </p><p><strong>计算机实现</strong>是指计算机组成的物理实现</p><p><strong>吞吐量</strong>：表征一台计算机在某一时间间隔内能够处理的信息量。</p><p><strong>CPI(Cycles Per Instruction)</strong>：表示每条指令周期数，即执行一条质量所需的平均时钟周期数。计算如下：<br>CPI=执行某段程序所需的CPU时钟周期数/程序包含的指令条数</p><p><strong>MIPS(Million Instructions Per Second)</strong>：每秒执行多少百万条定点指令数，计算如下：<br>MIPS=指令数/(程序执行的时间*10^6)</p><p><strong>FLOPS(Floating-point Operations Per Second)</strong>：每秒执行浮点操作的次数，用来衡量机器浮点操作的性能，计算如下：<br>FLOPS=程序中的浮点操作次数/程序执行时间(S)</p><h1 id="二、数据的机器表示"><a href="#二、数据的机器表示" class="headerlink" title="二、数据的机器表示"></a>二、数据的机器表示</h1><p><strong>计算机数制</strong>：十进制D，二进制B，十六进制H······<br>二进制——&gt;十进制：按权相加<br>十进制——&gt;二进制：除2取余<br>十进制——&gt;十六进制：除16取余<br>十六进制——&gt;十进制：按权相加<br>二进制——&gt;十六进制：四位合一（小数点左或右，每四位合一位）<br>十六进制——&gt;二进制：将十六进制的每位用四位二进制表示</p><p><strong>字母ASCII码</strong>：A所对应的码是在其十六进制的基础上加37H，小写字母的码比其大写字母对应的码大20H<br><strong>数字ASCII码</strong>：在其数字基础上加30H</p><p><strong>校验编码和解码</strong><br>为了判断，纠正信息在存入物理设备或传输中被干扰而导致某些信息错误，需要在信息发送（存储）后之前进行编码，在信息接收（读出）后进行解码。<br>校验码编码采用冗余校验（在近笨的有效信息位尚在扩充若干校验位称为冗余位，冗余位越多纠错差错能力越强）的编码思想。<br><strong>奇偶校验</strong>：是一种只有一位冗余位的编码方法，常用于主存校验，信息传送。分为奇校验，偶校验两种。<br>奇校验：编码后的有效信息位和奇偶校验位的个数为奇数<br>偶校验：编码后有效信息位和奇偶校验位1的个数为偶数</p><p>奇偶校验电路采用异或的方式。如果采用偶校验，将所有信息位异或后得到的就是偶校验位。如果采用奇校验，将所有信息位异或后再取反得到的便是奇校验<br>接收端将接受的全部信息（包括校验位）进行异或运算，如果是偶校验，结果如果为0则正确。如果是奇校验结果为1则正确</p><p><strong>海明码编码</strong><br>是一种既能发现错误又能纠正错误的校验码。<br>其中包含n位有效信息位，k位校验位。k位校验位一共有2^k种组合，除去采用一种组合指示是否在传输中出现错误。要满足如下公式：2^k&gt;=n+k+1<br>海明码规定，位号（从左往右数，1为起始）等于2的权值的那些位均可用作奇偶校验位，余下则是信息位。<br>校验位与信息位的关系：信息位的位号等于哪几个校验位相加，就是被哪几个校验位检验。例如：3（2^0+2^1)位号为3的信息位将被位号为0和1的校验位<br><strong>海明码的编码原理</strong><br>校验位的值是其所校验的信息位之异或<br><strong>海明码错误位查询</strong><br>海明码出错指示码称为指误字，他所检验的不仅包含信息位还有，校验位。E0检验p0，E1检验P1，E2检验P2，E3检验P3，E4检验P4。指误字的值是所检验的位异或后的值<br>错误位就是E3E2E1E0<br><strong>海明码的纠错</strong><br>只需将错误位取反</p><p><strong>循环冗余校验</strong><br>设带编码的信息以多项式M（x)表示将M(x)左移得到M(x)<em>x^r，使低r位全为0，以便与校验位拼接。<br>校验位用M(x)</em>x^r除以生成多项式G(x)（G(x)必须是r+1位的）所得余数则为校验位。<br>所得的余数与M(x)*x^r相加便为CRC码</p><p><strong>CRC码的译码及纠错</strong><br>用CRC码除以G(x)若余数为0，则该码正确。否则，余数即为错误位</p><h1 id="三、运算方法运算器"><a href="#三、运算方法运算器" class="headerlink" title="三、运算方法运算器"></a>三、运算方法运算器</h1><p>符号：正0负1<br><strong>原码表示</strong>：<br>======整数：用逗号将符号与数隔开<br>======小数：用.将符号和小数隔开</p><p><strong>补码表示</strong>：<br>======整数：用逗号将符号位与数值部分隔开，负数或浮点机中正数阶码按位取反加1<br>======小数：用.将符号位与数值隔开，负数数值部分按位取反加1</p><p><strong>反码表示</strong>：<br>======整数：用逗号将符号位与数值部分隔开，负数或浮点机中正数阶码按位取反<br>======小数：用.将符号位与数值隔开，负数数值部分按位取反</p><p><strong>定点表示</strong>：<br>小数点固定的数，用来表示纯整数，纯小数。采用定点数的机器称为定点机<br><strong>浮点表示</strong>：<br>1.52343<em>2^3<br>将正数尾数最高位为1的浮点数称为规格化数，即0.11110101</em>2^10<br><strong>浮点机中表示</strong>：<br>阶符，阶码；数值</p><p><strong>定点数乘除 </strong><br>定点数的乘法机算（<strong>原码一位乘</strong>）：<br>最先部分积为0，判断乘数最低位（为1则部分积加上被乘数，为0部分积加上0）得到新的部分积，部分积右移一位，乘数得到此数放在最高位同时踢出最低位。当原始乘数全被踢出时运算结束，结果为部分积与新乘数拼接。<br>（<strong>补码一位乘</strong>）<br>判断乘数是否大于0（大于0则在结果不需加负的被乘数的补码，小于0需要加）（补码符号位为两位）<br>定点数的除法：<br>（<strong>恢复余数法</strong>）<br>（结果符号位是被除数与除数的符号位的异或）<br>（两个补码的运算，余数为负时需加上除数补码）<br>一开始被除数补码减除数补码，（若余数为负则上商0，加除数补码，余数左移一位后再减除数补码。若余数为正，左移一位，上商1，再减除数补码）直到结果位数与初始除数位数相同<br>（<strong>加减交替法</strong>）<br>一开始被除数补码减除数补码，（若余数为负则上商0，加除数补码。。。。。。</p><p>（<strong>补码除法，末位横置1法</strong>）</p><p>判断被除数补码与除数补码是否同号（同号则减除数补码，异号加除数补码），所得余数判断是否与除数同号（同号则上商1左移1位减除数补码，异号上商0左移一位加除数补码，直到所得商位数为初始商位数减1，所得结果左移一位加1。（！！！！同号减y补上商1，异号加y补上商0）</p><p><strong>浮点数加减</strong></p><p><strong>加法</strong><br>先对阶，按照小阶看齐大阶原则，使阶小的尾数右移。然后尾数相加，得数若是数值位第一位和符号位相同需左规（左移一位，阶码减1 ）若得数符号位两位不同需右规，再做舍入处理<br><strong>减法</strong><br>先对阶，按照小阶看齐大阶原则，使阶小的尾数右移。然后尾数相减，得数若是数值位第一位和符号位相同需左规（左移一位，阶码减1 ）若得数符号位两位不同需右规，再做舍入处理。阶符为01时为上溢，需做溢出处理，阶符为10时为下溢，按机器零处理。</p><h1 id="四、指令系统"><a href="#四、指令系统" class="headerlink" title="四、指令系统"></a>四、指令系统</h1><p>指令是指计算机执行某些操作的命令，一台计算机的所有指令的集合构成该机的指令系统，也称指令集。<br><strong>寻址技术</strong><br>指的是寻找操作数的地址或下一条将要执行的指令地址，寻址技术是计算机设计中硬件对软件最早提供支持的技术之一。<br>寻找下一条将要执行的指令地址称为指令寻址，寻找操作数的地址称为数据寻址。</p><p><strong>s设计指令系统格式</strong><br>直接寻址：OP + A<br>变址寻址：OP + Rx+A<br>寄存器寻址：OP+Rx</p><p>OP为操作码，A为形式地址，M为寻址特征 </p><h1 id="五、中央处理器"><a href="#五、中央处理器" class="headerlink" title="五、中央处理器"></a>五、中央处理器</h1><p><strong>指令流，数据流</strong><br>在程序运行过程中，在计算机的各部件之间流动的指令和数据形成了指令流，数据流。<br>指令流，数据流，不是程序中静态的指令序列和存储器中静态分配序列。指令流指的是cpu执行的指令序列，数据流指的是根据指令操作要求依次存取数据的序列。</p><p>cpu的基本功能就是对指令流和数据流在时间与空间上实施正确的控制。</p><p><strong>程序计数器（PC）</strong><br>是专用寄存器，又称指令计数器，用来存放正在执行的指令地址，或接着要执行的下一条指令地址。<br><strong>cpu中的主要技术参数</strong><br>cpu的字长：指的是在单位时间内同时处理的二进制数据的位数。cpu按照其处理信息的字长可分为，8位cpu，16位，32位，64位。<br>内部工作频率：又称为内频或主频，它是衡量cpu速度的重要参数。主频表示在cpu内数字脉冲信号震荡的速度。</p><p><strong>控制器硬件实现办法</strong><br>控制器分为三种，组合逻辑性，存储逻辑性，组合逻辑和存储逻辑结合型。</p><p><strong>指令运行</strong><br>一条指令运行过程可以分为三种阶段：取指令阶段，分析取数阶段，执行阶段。</p><p><strong>微程序控制原理</strong><br><em>微命令</em>：控制部件向执行部件发出的控制命令<br><em>微操作</em>：是计算机中最基本的不可再分的操作</p><p><em>微命令</em> 和<em>微操作</em>是一一对应的微命令是微操作的控制信号，微操作是微命令的操作过程。</p><p><em>微指令</em>：是控制存储器的一个单元的内容，是若干微命令的集合<br><em>微地址</em>：存放控制存储单元的单元地址就成为微地址。<br><em>微周期</em>：从控制存储器中读取一条微指令并执行相应的微命令所需的全部时间<br><em>微程序</em>：一系列微指令的有序集合就是微程序。每一条机器指令都对应一个微程序。</p><p><strong>微指令编码法</strong><br>直接控制法，最短编码法，字段编码法</p><h1 id="六、指令流水线"><a href="#六、指令流水线" class="headerlink" title="六、指令流水线"></a>六、指令流水线</h1><h1 id="七、存储器系统及其层次结构"><a href="#七、存储器系统及其层次结构" class="headerlink" title="七、存储器系统及其层次结构"></a>七、存储器系统及其层次结构</h1><p><strong>存储器的性能指标</strong><br>存储容量：存储器所能容纳二进制信息的总量。容量单位：位（b) 字节(B)…… 1B=8b</p><p>存储器速度：衡量存储器的速度通常有三个相关参数（存取时间，存取周期，存储器带宽）</p><p><strong>存储器的分类</strong><br>按存储介质分（磁表面存储器，半导体存储器，光盘存储器）<br>按所处位置分（内存，外村，缓冲存储器（cache））<br>按存取方式分（随机存储器，只读存储器，串行访问存储器）</p><p><strong>存储器的层次结构</strong><br>缓存-主存主要解决cpu和主存速度不匹配问题 ，主存和缓存之间的数据调动是由硬件自动完成的<br>主存-辅存层次主要解决存储系统的容量问题，主存和辅存志坚的数据调动是由硬件和操作系统共同完成的</p><p><strong>半导体存储器</strong><br>随机存储器RAM：可以通过指令随机的对任意存储单元进行读写访问，RAM通常是住存储器的主要组成部分。分为动态(DRAM，每隔2ms刷新一次)和静态(SRAM)两种<br>只读存储器（ROM)：仅能执行读操作的存储器<br>半导体串行存储器：其数据按位串行读出或写入</p><p><strong>存储器芯片</strong><br>存储容量：用常用存储单元个数乘以存储单元的位数计算<br>在存储器中存储1位二进制信息的存储元件称为基本存储单元，若干个基本存储单元组成一个存储字，存储字的位数称为存储器位宽，被一定的规则组合在一起构成一个存储体<br>存储器芯片由存储阵列，译码器，读写控制电路，数据缓冲电路构成。<br>地址译码器：将输入的地址信号（来自cpu发出的地址信号）翻译成某单元（存储字或字节）的选通信号，使该单元能被读写</p><p>存储阵列，译码器，读写控制电路分别通过片选信号CE，读写控制信号WE，输出允许信号OE引脚实现。</p><p>动态RAM的刷新：刷新即将原信息读出，再生成原信息重新写入。刷新的原因（因为存储单元是随机访问，未得到访问的单元内的原信息可能会消失，因此要定时刷新）通常有三种刷新（集中刷新，分散刷新，异步刷新）</p><p><strong>存储器与cpu</strong><br>存储容量的扩展：位拓展，自拓展，字位拓展<br>存储器与cpu的连接：地址线，数据线，读写命令线，片选线</p><h1 id="八、互连及输入输出组织"><a href="#八、互连及输入输出组织" class="headerlink" title="八、互连及输入输出组织"></a>八、互连及输入输出组织</h1><h1 id="九、总线系统"><a href="#九、总线系统" class="headerlink" title="九、总线系统"></a>九、总线系统</h1><p><strong>总线</strong><br>是连接多个部件的信息传输线，是各部件共享的传输介质。<br>按照总线上传输信号的不同，总线可分为地址总线，控制总线，数据总线三类。<br><strong>地址总线</strong><br>传送的是从cpu等主设备发往从设备的地址信号<br><strong>控制总线</strong><br>传送的是一个部件对另一个部件的控制或状态信息。<br><strong>数据总线</strong><br>传送的是各部件之间交换的数据信息</p><p>根据连接方式不同，单处理机系统中采用的总线结构有两种基本类型，即单总线结构，多总线结构。<br><strong>单总线结构</strong><br>使用单一的系统总线连接cpu，主存，I/o设备，允许各设备间的信息直接交换。</p><p>简单，易扩充，工作效率低。</p><p><strong>多总线结构</strong><br>cpu和缓存之间采用高速的cpu总线，主存在系统总线上，通过桥，cpu总线，系统总线，高速总线彼此相连。</p><p><strong>总线的仲裁</strong><br>连接到总线上的功能模块分为主模块，从模块。主模块不固定，有启动一个总线周期的作用。从模块只能响应主模块的请求。每次只能有一个主模块。<br>仲裁就是在多个模块同时竞争总线控制权的时候选择一个主模块。<br>按照总线仲裁电路的位置不同，仲裁分为集中式仲裁和分布式仲裁。</p><p><strong>集中式仲裁</strong><br>每个功能模块有两条线连到总线，一条是仲裁请求线br另一条是仲裁授权线bg<br>具体实现方式有链式查询方式，计数器定时查询，独立请求。</p><p>链式查询方式：通过判断离总线仲裁器的远近判断其优先级，优先级高的且有仲裁请求则被授权。</p><p><strong>总线通信控制</strong><br>总线的通信控制主要解决通信双方如何获知传输开始和传输结束，以及通信双方如何协调，如何配合，通常用同步通信，异步通信，半同步通信和分离式通信四种方式。  </p><p><em>总线传输速率=总线宽度/总线传输周期</em></p><p>异步串行通信的数据传输速率用<em>波特率</em>表示。波特率是指单位时间内传送二进制数据的位数，单位用位/秒表示，记为波特。由于异步通信中包含若干附加位，如起始位，终止位，可用比特率来衡量异步串行通信的有效数据传输速率，即单位时间内传送二进制有效数据的位数单位用位/秒表示。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、计算机系统概述&quot;&gt;&lt;a href=&quot;#一、计算机系统概述&quot; class=&quot;headerlink&quot; title=&quot;一、计算机系统概述&quot;&gt;&lt;/a&gt;一、计算机系统概述&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;计算机由五部分组成&lt;/strong&gt;：控制器，存储器，运算器，输入设备，输出设备&lt;br&gt;
    
    </summary>
    
      <category term="计算机组成原理" scheme="http://0202zc.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="计算机组成原理, 考研" scheme="http://0202zc.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 —— 爬取教务网明日课程并发送微信好友</title>
    <link href="http://0202zc.github.io/2018/05/18/Python-3-6%E8%8E%B7%E5%8F%96%E6%98%8E%E6%97%A5%E8%AF%BE%E7%A8%8B%E5%B9%B6%E5%8F%91%E9%80%81%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B/"/>
    <id>http://0202zc.github.io/2018/05/18/Python-3-6获取明日课程并发送微信好友/</id>
    <published>2018-05-18T07:29:34.000Z</published>
    <updated>2020-01-19T03:01:37.864Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li>实现将登录教务网爬取到的课程内容通过微信消息的方式发送给好友，提醒明日课程<a id="more"></a></li><li>主要用到itchat、requests、BeautifulSoup等库</li><li>登录的用户名和密码以及爬取下来的验证码需要自己输入</li><li>获取本地日期，判断星期几，加一天就是明日的星期数。</li></ul><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> importlib,sys</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image,ImageEnhance</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime,date</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getInfor</span><span class="params">(response, xpath)</span>:</span></span><br><span class="line">    content = response.content.decode(<span class="string">'gb2312'</span>)  <span class="comment"># 网页源码是gb2312要先解码</span></span><br><span class="line">    selector = etree.HTML(content)</span><br><span class="line">    infor = selector.xpath(xpath)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> infor</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_week_day</span><span class="params">(date)</span>:</span></span><br><span class="line">    week_day_dict = &#123;</span><br><span class="line">        <span class="number">0</span> : <span class="string">'星期一'</span>,</span><br><span class="line">        <span class="number">1</span> : <span class="string">'星期二'</span>,</span><br><span class="line">        <span class="number">2</span> : <span class="string">'星期三'</span>,</span><br><span class="line">        <span class="number">3</span> : <span class="string">'星期四'</span>,</span><br><span class="line">        <span class="number">4</span> : <span class="string">'星期五'</span>,</span><br><span class="line">        <span class="number">5</span> : <span class="string">'星期六'</span>,</span><br><span class="line">        <span class="number">6</span> : <span class="string">'星期日'</span></span><br><span class="line">    &#125;</span><br><span class="line">    day = date.weekday()</span><br><span class="line">    <span class="keyword">if</span>(day == <span class="number">6</span>):</span><br><span class="line">        tomorrow = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tomorrow = day + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> week_day_dict[tomorrow]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_tomorrow_column</span><span class="params">(date)</span>:</span></span><br><span class="line">    column_dict = &#123;</span><br><span class="line">        <span class="string">'星期一'</span> : <span class="number">3</span>,</span><br><span class="line">        <span class="string">'星期二'</span> : <span class="number">4</span>,</span><br><span class="line">        <span class="string">'星期三'</span> : <span class="number">5</span>,</span><br><span class="line">        <span class="string">'星期四'</span> : <span class="number">6</span>,</span><br><span class="line">        <span class="string">'星期五'</span> : <span class="number">7</span>,</span><br><span class="line">        <span class="string">'星期六'</span> : <span class="number">8</span>,</span><br><span class="line">        <span class="string">'星期日'</span> : <span class="number">9</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> column_dict[date]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 设置编码</span></span><br><span class="line">    importlib.reload(sys)</span><br><span class="line">    <span class="comment"># 初始参数，自己输入的学号，密码。</span></span><br><span class="line">    studentnumber = input(<span class="string">"学号："</span>)</span><br><span class="line">    password = input(<span class="string">"密码："</span>)</span><br><span class="line">    <span class="comment"># 访问教务系统,前面分析过了，提交数据时要用这个值。先得到__VIEWSTATE的值。</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    url = <span class="string">"http://202.199.155.35/(0r3mgfvgmxuxkvjz4lf1v5a1)/default2.aspx"</span></span><br><span class="line">    response = s.get(url)</span><br><span class="line">    selector = etree.HTML(response.content)</span><br><span class="line">    __VIEWSTATE = selector.xpath(<span class="string">'//*[@id="form1"]/input/@value'</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 获取验证码并下载到本地</span></span><br><span class="line">    imgUrl = <span class="string">"http://202.199.155.35/(0r3mgfvgmxuxkvjz4lf1v5a1)/CheckCode.aspx?"</span></span><br><span class="line">    imgresponse = s.get(imgUrl, stream=<span class="keyword">True</span>)</span><br><span class="line">    <span class="keyword">print</span> (s.cookies)</span><br><span class="line">    image = imgresponse.content</span><br><span class="line">    DstDir = os.getcwd()+<span class="string">"\\"</span></span><br><span class="line">    print(<span class="string">"保存验证码到："</span>+DstDir+<span class="string">"code.jpg"</span>+<span class="string">"\n"</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> open(DstDir+<span class="string">"code.jpg"</span>, <span class="string">"wb"</span>) <span class="keyword">as</span> jpg:</span><br><span class="line">            jpg.write(image)</span><br><span class="line">    <span class="keyword">except</span> IOError:</span><br><span class="line">        print(<span class="string">"IO Error\n"</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        jpg.close</span><br><span class="line">    <span class="comment"># 手动输入验证码</span></span><br><span class="line">    image = Image.open(<span class="string">'&#123;&#125;/code.jpg'</span>.format(os.getcwd()))</span><br><span class="line">    image.show()</span><br><span class="line">    code = input(<span class="string">"验证码是："</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        image.close()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print()</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构建post数据</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"__VIEWSTATE"</span>: __VIEWSTATE,</span><br><span class="line">        <span class="string">"txtUserName"</span>: studentnumber,</span><br><span class="line">        <span class="string">"TextBox2"</span>: password,</span><br><span class="line">        <span class="string">"txtSecretCode"</span>: code,</span><br><span class="line">        <span class="string">"Button1"</span>: <span class="string">""</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 提交表头，里面的参数是电脑各浏览器的信息。模拟成是浏览器去访问网页。</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 登陆教务系统</span></span><br><span class="line">    response = s.post(url, data=data, headers=headers)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"成功进入"</span>)</span><br><span class="line">    <span class="comment"># 得到登录信息，个人感觉有点多余。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取学生基本信息</span></span><br><span class="line">    text = getInfor(response, <span class="string">'//*[@id="xhxm"]/text()'</span>)</span><br><span class="line">    text = text.replace(<span class="string">" "</span>, <span class="string">""</span>)</span><br><span class="line">    <span class="keyword">print</span> (text)</span><br><span class="line">    <span class="comment"># 抓一下名字</span></span><br><span class="line">    catch = <span class="string">'&lt;span id="xhxm"&gt;(.*?)&lt;/span&gt;&lt;/em&gt;'</span></span><br><span class="line">    name = re.findall(catch, response.text)</span><br><span class="line">    name = name[<span class="number">0</span>]</span><br><span class="line">    name = name[:<span class="number">-2</span>]</span><br><span class="line"></span><br><span class="line">    name = str(name).replace(<span class="string">r'\x'</span>, <span class="string">'%'</span>)  <span class="comment"># 扩大适用性</span></span><br><span class="line">    name = name.upper()</span><br><span class="line">    name = name[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取课表，kburl是课表页面url,为什么有个Referer参数,这个参数代表你是从哪里来的。就是登录后的主界面参数。这个一定要有。</span></span><br><span class="line">    kburl = <span class="string">"http://202.199.155.35/(0r3mgfvgmxuxkvjz4lf1v5a1)/xskbcx.aspx?xh="</span> + studentnumber + <span class="string">"&amp;xm="</span> + name + <span class="string">"&amp;gnmkdm=N121603"</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"Referer"</span>: <span class="string">"http://202.199.155.35/(0r3mgfvgmxuxkvjz4lf1v5a1)/xs_main.aspx?xh="</span> + studentnumber,</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    response = s.get(kburl, headers=headers)</span><br><span class="line">    <span class="comment"># html代表访问课表页面返回的结果就是课表。下面做的就是解析这个html页面。</span></span><br><span class="line">    html = response.content.decode(<span class="string">"gb2312"</span>)</span><br><span class="line">    soup = BeautifulSoup(response.text,<span class="string">"html.parser"</span>)</span><br><span class="line">    s=soup.find(id=<span class="string">'Table1'</span>)</span><br><span class="line">    trs=s.find_all(<span class="string">'tr'</span>)</span><br><span class="line"></span><br><span class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">True</span>):</span><br><span class="line">        friend = input(<span class="string">'请输入好友昵称（输入0退出）：'</span>)</span><br><span class="line">        <span class="keyword">if</span>(friend == <span class="string">"0"</span>):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        users = itchat.search_friends(name= (<span class="string">u''</span>+str(friend)))</span><br><span class="line">        userName = users[<span class="number">0</span>][<span class="string">'UserName'</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 打印全部课表</span></span><br><span class="line">        <span class="comment"># for i in range(11):</span></span><br><span class="line">        <span class="comment">#     td1=trs[i].find_all('td')</span></span><br><span class="line">        <span class="comment">#     for j in td1: </span></span><br><span class="line">        <span class="comment">#         print(j.text[0:6], end='\t')</span></span><br><span class="line">        <span class="comment">#     print()</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#print(soup)</span></span><br><span class="line">        <span class="comment"># selector = etree.HTML(html)</span></span><br><span class="line">        <span class="comment"># content = selector.xpath('//[@id="Table1"]/tbody/tr/td/text()')</span></span><br><span class="line">        <span class="comment"># for each in content:</span></span><br><span class="line">        <span class="comment">#     print (each)</span></span><br><span class="line"></span><br><span class="line">        now = datetime.datetime.now()</span><br><span class="line">        delta = datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line">        n_days = now + delta</span><br><span class="line">        tomorrow = get_week_day(datetime.datetime.now())</span><br><span class="line">        date_info = <span class="string">"明天是 "</span> + n_days.strftime(<span class="string">'%Y-%m-%d'</span>) + <span class="string">" "</span> + tomorrow</span><br><span class="line">        print(<span class="string">"明天是 "</span> + n_days.strftime(<span class="string">'%Y-%m-%d'</span>) + <span class="string">" "</span> + tomorrow)</span><br><span class="line">        itchat.send(str(date_info),toUserName = userName)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(n_days.strftime(<span class="string">'%m'</span>) == <span class="string">"05"</span> <span class="keyword">and</span> n_days.strftime(<span class="string">'%d'</span>) &gt;= <span class="string">"01"</span> <span class="keyword">and</span> n_days.strftime(<span class="string">'%d'</span>) &lt; <span class="string">"07"</span>):</span><br><span class="line">            info = <span class="string">"明天没有课程哦，好好享受五一假期！"</span></span><br><span class="line">            print(<span class="string">"\t明天没有课程哦，好好享受五一假期！"</span>)</span><br><span class="line">            itchat.send(str(info),toUserName = userName)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span>(tomorrow == <span class="string">"星期六"</span> <span class="keyword">or</span> tomorrow == <span class="string">"星期日"</span>):</span><br><span class="line">            info = <span class="string">"明天没有课程哦！"</span></span><br><span class="line">            print(<span class="string">"\t明天没有课程哦！"</span>)</span><br><span class="line">            itchat.send(str(info),toUserName = userName)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 打印明天课表</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">11</span>):</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">0</span>):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            td1=trs[i].find_all(<span class="string">'td'</span>)</span><br><span class="line">            count = <span class="number">1</span> <span class="comment"># 列数</span></span><br><span class="line">            column = get_tomorrow_column(tomorrow) <span class="comment"># 上午第一节课和下午第一节课的标签前面包含有“上午”和“下午”列</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> td1: </span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">2</span> <span class="keyword">or</span> i == <span class="number">6</span> <span class="keyword">or</span> i == <span class="number">10</span>):</span><br><span class="line">                    <span class="keyword">if</span>(count &gt;= <span class="number">8</span>):</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">if</span>(count == column):</span><br><span class="line">                        print(j.text, end=<span class="string">'\t'</span>)</span><br><span class="line">                        info = j.text</span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span>(info.strip()==<span class="string">''</span>):</span><br><span class="line">                            itchat.send(str(info),toUserName = userName)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span>(count &gt;= <span class="number">7</span>):</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">if</span>(count == column<span class="number">-1</span>):</span><br><span class="line">                        print(j.text, end=<span class="string">'\t'</span>)</span><br><span class="line">                        info = j.text</span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span>(info.strip()==<span class="string">''</span>):</span><br><span class="line">                            itchat.send(str(info),toUserName = userName)</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            print()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(column&lt;<span class="number">8</span>):</span><br><span class="line">            info = <span class="string">"——这些是明天的课程，注意周次，请做好课前准备"</span></span><br><span class="line">            </span><br><span class="line">            itchat.send(str(info),toUserName = userName)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            info = <span class="string">"明天没有课程哦！"</span></span><br><span class="line">            print(<span class="string">"\t"</span> + info)</span><br><span class="line">            itchat.send(str(info),toUserName = userName)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"退出..."</span>)</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(DstDir+<span class="string">"code.jpg"</span>):</span><br><span class="line">        <span class="comment">#删除文件</span></span><br><span class="line">        os.remove(DstDir+<span class="string">"code.jpg"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h1><ul><li>在登录教务网时需要保存cookie信息，否则将无法访问后续网页</li><li>爬取网页发送请求的一种方法是用requests，还可以用urllib.request 和 urllib.parse</li><li>爬取课程表格时，有“早上”、“上午”、“下午”、“晚上”等列比较特殊，它们和各个时间段的第一行放在一起，所以要特殊处理该行</li><li>再接再厉！</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;实现将登录教务网爬取到的课程内容通过微信消息的方式发送给好友，提醒明日课程
    
    </summary>
    
      <category term="Python学习" scheme="http://0202zc.github.io/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="http://0202zc.github.io/tags/Python/"/>
    
      <category term="网络爬虫" scheme="http://0202zc.github.io/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记 —— OpenCV+百度云接口实现人脸认证</title>
    <link href="http://0202zc.github.io/2018/05/17/OpenCV-%E7%99%BE%E5%BA%A6%E4%BA%91%E6%8E%A5%E5%8F%A3%E5%AE%9E%E7%8E%B0%E4%BA%BA%E8%84%B8%E8%AE%A4%E8%AF%81/"/>
    <id>http://0202zc.github.io/2018/05/17/OpenCV-百度云接口实现人脸认证/</id>
    <published>2018-05-17T02:43:40.000Z</published>
    <updated>2020-01-19T03:01:13.819Z</updated>
    
    <content type="html"><![CDATA[<h1 id="有话在先"><a href="#有话在先" class="headerlink" title="有话在先"></a>有话在先</h1><p>前日注册了百度云账号，接触到了百度云的一系列接口，看到“<em>人脸对比</em>”后突发奇想，用人脸识别来做认证（虽然没有Alipay那么高端）模拟登录执行程序。  <a id="more"></a><br>于是就去百度了<em>百度云接口python实现人脸识别</em>、<em>OpenCV人脸认证</em>。网上实现百度云接口的代码是用Python3写的，但是OpenCV目前只支持Python2；所以我尝试了一下把py3的百度云人脸识别代码改成了py2的。<br>结果……失败了【悲伤.gif】……<br>所以我将就用那个py3，同时安装了py2，然后再在一个程序里面调用另一个程序<br>但是这样做可移植性差，需要用户同时安装py2和py3。  </p><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><p><em>python3.6+百度人脸识别API进行照片人脸对比：<a href="https://blog.csdn.net/weixin_39133476/article/details/79310817" target="_blank" rel="noopener">https://blog.csdn.net/weixin_39133476/article/details/79310817</a></em><br><em>python+OpenCV人脸认证：<a href="https://www.cnblogs.com/hanson1/p/7105265.html" target="_blank" rel="noopener">https://www.cnblogs.com/hanson1/p/7105265.html</a></em></p><h1 id="Python2-x与3​​-x版本区别"><a href="#Python2-x与3​​-x版本区别" class="headerlink" title="Python2.x与3​​.x版本区别"></a>Python2.x与3​​.x版本区别</h1><ul><li>Python的3​​.0版本，常被称为Python 3000，或简称Py3k。相对于Python的早期版本，这是一个较大的升级。</li><li>为了不带入过多的累赘，Python 3.0在设计的时候没有考虑向下相容。</li><li>许多针对早期Python版本设计的程式都无法在Python 3.0上正常执行。</li><li>为了照顾现有程式，Python 2.6作为一个过渡版本，基本使用了Python 2.x的语法和库，同时考虑了向Python 3.0的迁移，允许使用部分Python 3.0的语法与函数。</li><li>新的Python程式建议使用Python 3.0版本的语法。</li><li>除非执行环境无法安装Python 3.0或者程式本身使用了不支援Python 3.0的第三方库。目前不支援Python 3.0的第三方库有Twisted, py2exe, PIL等。</li><li>大多数第三方库都正在努力地相容Python 3.0版本。即使无法立即使用Python 3.0，也建议编写相容Python 3.0版本的程式，然后使用Python 2.6, Python 2.7来执行。<br><em>详情阅读：</em><br><em><a href="https://blog.csdn.net/ljl6158999/article/details/78983725" target="_blank" rel="noopener">https://blog.csdn.net/ljl6158999/article/details/78983725</a></em>，<br><em><a href="https://www.cnblogs.com/sherlockChen/p/8064896.html" target="_blank" rel="noopener">https://www.cnblogs.com/sherlockChen/p/8064896.html</a></em><br>其实我遇到的问题是库的问题，py3将py2的一些库做了整合和删除，导致py2变py3时会很麻烦</li></ul><h1 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h1><h2 id="思想"><a href="#思想" class="headerlink" title="思想"></a>思想</h2><ul><li>这需要之前先保存一张人脸的图片，然后调用摄像头拍照获取当前人脸，通过代码上传二者到百度云<em>人脸对比</em>进行比较分析</li><li>分析后会有一段返回值，用BeautifulSoup库可取其重点文字：“<em>是同一个人</em>”，“<em>不是同一个人</em>”。二者有重复语句段，在判断的时候要注意。  </li></ul><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><h3 id="authentication-py-Python2-7"><a href="#authentication-py-Python2-7" class="headerlink" title="authentication.py [Python2.7]"></a>authentication.py [Python2.7]</h3><figure class="highlight python"><figcaption><span>authentication.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">print(<span class="string">'Press Esc to exit'</span>)</span><br><span class="line">faceCascade = cv2.CascadeClassifier(<span class="string">'haarcascade_frontalface_default.xml'</span>)</span><br><span class="line">faceCascade.load(<span class="string">'D:/Program Files/Python/opencv/sources/data/haarcascades/haarcascade_frontalface_default.xml'</span>)</span><br><span class="line">imgWindow = cv2.namedWindow(<span class="string">'FaceDetect'</span>, cv2.WINDOW_NORMAL)</span><br><span class="line">path = os.getcwd()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detect_face</span><span class="params">()</span>:</span></span><br><span class="line">    capInput = cv2.VideoCapture(<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 避免处理时间过长造成画面卡顿</span></span><br><span class="line">    nextCaptureTime = time.time()</span><br><span class="line">    faces = []</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> capInput.isOpened(): print(<span class="string">'Capture failed because of camera'</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        ret, img = capInput.read()</span><br><span class="line">        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line">        <span class="keyword">if</span> nextCaptureTime &lt; time.time():</span><br><span class="line">            nextCaptureTime = time.time() + <span class="number">0.1</span></span><br><span class="line">            faces = faceCascade.detectMultiScale(gray, <span class="number">1.3</span>, <span class="number">5</span>)</span><br><span class="line">        <span class="comment"># if faces:</span></span><br><span class="line">            <span class="keyword">for</span> x, y, w, h <span class="keyword">in</span> faces:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                img = cv2.rectangle(img, (x, y), (x + w, y + h), (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">                </span><br><span class="line">        cv2.imshow(<span class="string">'FaceDetect'</span>, img)</span><br><span class="line">        <span class="keyword">if</span> count == <span class="number">8</span>:</span><br><span class="line">            print(<span class="string">u'检测出人脸'</span>)</span><br><span class="line">            cv2.imwrite(path + <span class="string">'/face.jpg'</span>, img)</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># 这是简单的读取键盘输入，27即Esc的acsii码</span></span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span> == <span class="number">27</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    capInput.release()</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    detect_face()</span><br><span class="line">    </span><br><span class="line">    program  = path + <span class="string">"/FaceCompare.py"</span></span><br><span class="line">    command = <span class="string">"py -3 "</span>+ program</span><br><span class="line">    print(command)</span><br><span class="line">    os.system(command)</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(path + <span class="string">'/face.jpg'</span>):</span><br><span class="line">        os.remove(path + <span class="string">'/face.jpg'</span>)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="FaceCompare-py-Python3-6"><a href="#FaceCompare-py-Python3-6" class="headerlink" title="FaceCompare.py [Python3.6]"></a>FaceCompare.py [Python3.6]</h3><figure class="highlight python"><figcaption><span>FaceCompare.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> ssl</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipFace</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk  </span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> filedialog </span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">APP_ID = <span class="string">'你的APP_ID'</span></span><br><span class="line">API_KEY = <span class="string">'你的API_KEY'</span></span><br><span class="line">SECRET_KEY = <span class="string">'你的SECRET_KEY'</span></span><br><span class="line"></span><br><span class="line">path = os.getcwd()</span><br><span class="line"></span><br><span class="line"><span class="comment"># client_id 为官网获取的AK， client_secret 为官网获取的SK</span></span><br><span class="line"><span class="comment">#获取token</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_token</span><span class="params">()</span>:</span></span><br><span class="line">    client_id = API_KEY</span><br><span class="line">    client_secret = SECRET_KEY</span><br><span class="line">    host = <span class="string">'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=%s&amp;client_secret=%s'</span>%(client_id,client_secret)</span><br><span class="line">    req = request.Request(host)</span><br><span class="line">    req.add_header(<span class="string">'Content-Type'</span>, <span class="string">'application/json; charset=UTF-8'</span>)</span><br><span class="line">    response = request.urlopen(req)</span><br><span class="line">    <span class="comment">#获得请求结果</span></span><br><span class="line">    content = response.read()</span><br><span class="line">    <span class="comment">#结果转化为字符</span></span><br><span class="line">    content = bytes.decode(content)</span><br><span class="line">    <span class="comment">#转化为字典</span></span><br><span class="line">    content = eval(content[:<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">return</span> content[<span class="string">'access_token'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#转换图片</span></span><br><span class="line"><span class="comment">#读取文件内容，转换为base64编码</span></span><br><span class="line"><span class="comment">#二进制方式打开图文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">imgdata</span><span class="params">(file1path,file2path)</span>:</span></span><br><span class="line">    <span class="keyword">import</span> base64</span><br><span class="line">    f=open(<span class="string">r'%s'</span> % file1path,<span class="string">'rb'</span>) </span><br><span class="line">    pic1=base64.b64encode(f.read()) </span><br><span class="line">    f.close()</span><br><span class="line">    f=open(<span class="string">r'%s'</span> % file2path,<span class="string">'rb'</span>) </span><br><span class="line">    pic2=base64.b64encode(f.read())</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="comment">#将图片信息格式化为可提交信息，这里需要注意str参数设置</span></span><br><span class="line">    params = &#123;<span class="string">"images"</span>:str(pic1,<span class="string">'utf-8'</span>) + <span class="string">','</span> + str(pic2,<span class="string">'utf-8'</span>)&#125;</span><br><span class="line">    <span class="keyword">return</span> params</span><br><span class="line"></span><br><span class="line"><span class="comment">#提交进行对比获得结果</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img</span><span class="params">(file1path,file2path)</span>:</span></span><br><span class="line">    token = get_token()</span><br><span class="line">    <span class="comment">#人脸识别API</span></span><br><span class="line">    <span class="comment">#url = 'https://aip.baidubce.com/rest/2.0/face/v2/detect?access_token='+token</span></span><br><span class="line">    <span class="comment">#人脸对比API</span></span><br><span class="line">    url = <span class="string">'https://aip.baidubce.com/rest/2.0/face/v2/match?access_token='</span>+token</span><br><span class="line">    params = imgdata(file1path,file2path)</span><br><span class="line">    <span class="comment">#urlencode处理需提交的数据</span></span><br><span class="line">    data = parse.urlencode(params).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    req = request.Request(url,data=data)</span><br><span class="line">    req.add_header(<span class="string">'Content-Type'</span>, <span class="string">'application/x-www-form-urlencoded'</span>)</span><br><span class="line">    response = request.urlopen(req)</span><br><span class="line">    content = response.read()</span><br><span class="line">    content = bytes.decode(content)</span><br><span class="line">    content = eval(content)</span><br><span class="line">    <span class="comment">#获得分数</span></span><br><span class="line">    score = content[<span class="string">'result'</span>][<span class="number">0</span>][<span class="string">'score'</span>]</span><br><span class="line">    <span class="keyword">if</span> score&gt;<span class="number">80</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'照片相似度：'</span>+str(score)+<span class="string">',同一个人'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'照片相似度：'</span>+str(score)+<span class="string">',不是同一个人'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"\n************百度云人脸对比************"</span>)</span><br><span class="line">    file1_path = path + <span class="string">'/face.jpg'</span></span><br><span class="line">    file2_path = path + <span class="string">'/compared.jpg'</span> <span class="comment"># 之前保存的用于对比的图像</span></span><br><span class="line">    print(<span class="string">"计算中..."</span>)</span><br><span class="line">    res = img(file1_path,file2_path)</span><br><span class="line">    print(path)</span><br><span class="line">    print(<span class="string">'\n'</span> + res)</span><br><span class="line">    print(<span class="string">"**************************************\n"</span>)</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">'同一个人'</span> <span class="keyword">in</span> res):</span><br><span class="line">        print(<span class="string">'认证成功, 进入跑操系统'</span>)</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(path + <span class="string">'/face.jpg'</span>):</span><br><span class="line">            os.remove(path + <span class="string">'/face.jpg'</span>)</span><br><span class="line">        command = path + <span class="string">'/SportsSpider.exe'</span> <span class="comment"># 上次写的学校跑操系统的爬虫程序</span></span><br><span class="line">        os.system(command)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'认证失败'</span>)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;有话在先&quot;&gt;&lt;a href=&quot;#有话在先&quot; class=&quot;headerlink&quot; title=&quot;有话在先&quot;&gt;&lt;/a&gt;有话在先&lt;/h1&gt;&lt;p&gt;前日注册了百度云账号，接触到了百度云的一系列接口，看到“&lt;em&gt;人脸对比&lt;/em&gt;”后突发奇想，用人脸识别来做认证（虽然没有Alipay那么高端）模拟登录执行程序。
    
    </summary>
    
      <category term="Python学习" scheme="http://0202zc.github.io/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="http://0202zc.github.io/tags/Python/"/>
    
      <category term="人脸识别" scheme="http://0202zc.github.io/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
      <category term="百度云" scheme="http://0202zc.github.io/tags/%E7%99%BE%E5%BA%A6%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Java学习笔记 —— 新版Windows10配置Java环境变量</title>
    <link href="http://0202zc.github.io/2018/05/16/%E6%96%B0%E7%89%88Windows10%E9%85%8D%E7%BD%AEJava%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>http://0202zc.github.io/2018/05/16/新版Windows10配置Java环境变量/</id>
    <published>2018-05-16T12:56:50.000Z</published>
    <updated>2020-01-19T03:00:49.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在上学期安装好Java后，根据网上的教程配置了环境变量，在cmd里运行”java”成功，而运行”javac”出现“<em>不是内部或外部命令，也不是可运行的程序或批处理文件</em>”的提示。<br>经过了一番苦苦的寻找、测试，终于在百度经验的一篇找到了答案：  <a id="more"></a><br>（原文链接：<em><a href="http://jingyan.baidu.com/article/d5c4b52b80665fda560dc5e4.html" target="_blank" rel="noopener">http://jingyan.baidu.com/article/d5c4b52b80665fda560dc5e4.html</a></em>）<br>发现的确是环境变量配置的问题。  </p><h1 id="原料"><a href="#原料" class="headerlink" title="原料"></a>原料</h1><ul><li>一台新版的win10(16,17,18版)的电脑</li><li>Java jkd/jre 1.8以上版本</li><li>人脑</li><li>熟练操作鼠标和键盘的手</li></ul><h1 id="如何配置"><a href="#如何配置" class="headerlink" title="如何配置"></a>如何配置</h1><h2 id="首先，右键单击桌面“此电脑”图标，选择“属性”"><a href="#首先，右键单击桌面“此电脑”图标，选择“属性”" class="headerlink" title="首先，右键单击桌面“此电脑”图标，选择“属性”"></a>首先，右键单击桌面“此电脑”图标，选择“属性”</h2><h2 id="在左侧的菜单栏中选择“高级系统设置”"><a href="#在左侧的菜单栏中选择“高级系统设置”" class="headerlink" title="在左侧的菜单栏中选择“高级系统设置”"></a>在左侧的菜单栏中选择“高级系统设置”</h2><p><img data-src="/images/javac/1.jpg" alt="">  </p><h2 id="选择“环境变量”"><a href="#选择“环境变量”" class="headerlink" title="选择“环境变量”"></a>选择“环境变量”</h2><p><img data-src="/images/javac/2.jpg" alt="">  </p><h2 id="选择下方的新建，变量名为JAVA-HOME-变量值为你安装jdk的路径，我的是D-Program-Files-Java-jdk1-8-0-182，你的就要看自己的了"><a href="#选择下方的新建，变量名为JAVA-HOME-变量值为你安装jdk的路径，我的是D-Program-Files-Java-jdk1-8-0-182，你的就要看自己的了" class="headerlink" title="选择下方的新建，变量名为JAVA_HOME,变量值为你安装jdk的路径，我的是D:\Program Files\Java\jdk1.8.0_182，你的就要看自己的了"></a>选择下方的新建，变量名为JAVA_HOME,变量值为你安装jdk的路径，我的是D:\Program Files\Java\jdk1.8.0_182，你的就要看自己的了</h2><p><img data-src="/images/javac/3.jpg" alt="">  </p><h2 id="然后在新建个，变量名为CLASSPATH，变量值为-JAVA-HOME-lib-dt-jar-JAVA-HOME-lib-tools-jar-（注意这里一个符号都不能少，包含了前面的-还有后面的-），然后确定"><a href="#然后在新建个，变量名为CLASSPATH，变量值为-JAVA-HOME-lib-dt-jar-JAVA-HOME-lib-tools-jar-（注意这里一个符号都不能少，包含了前面的-还有后面的-），然后确定" class="headerlink" title="然后在新建个，变量名为CLASSPATH，变量值为 .;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar; （注意这里一个符号都不能少，包含了前面的 .;  还有后面的 ;），然后确定"></a>然后在新建个，变量名为CLASSPATH，变量值为 .;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar; （注意这里一个符号都不能少，包含了前面的 .;  还有后面的 ;），然后确定</h2><p><img data-src="/images/javac/4.jpg" alt=""></p><h2 id="这一步操作之后会出现一个操作界面是14-15版的win10-没有的，所以要注意看，找到Path-然后选择-“编辑”"><a href="#这一步操作之后会出现一个操作界面是14-15版的win10-没有的，所以要注意看，找到Path-然后选择-“编辑”" class="headerlink" title="这一步操作之后会出现一个操作界面是14,15版的win10 没有的，所以要注意看，找到Path,然后选择 “编辑”"></a>这一步操作之后会出现一个操作界面是14,15版的win10 没有的，所以要注意看，找到Path,然后选择 “编辑”</h2><p><img data-src="/images/javac/5.jpg" alt=""></p><h2 id="会出现这个页面，我们选择下面的“编辑文本”，然后确定"><a href="#会出现这个页面，我们选择下面的“编辑文本”，然后确定" class="headerlink" title="会出现这个页面，我们选择下面的“编辑文本”，然后确定"></a>会出现这个页面，我们选择下面的“编辑文本”，然后确定</h2><p><img data-src="/images/javac/6.jpg" alt=""><br><img data-src="/images/javac/7.jpg" alt=""></p><h2 id="重点-在变量值的开始处，找到C-在C-添加这段变量-JAVA-HOME-bin-JAVA-HOME-jre-bin-（注意前后的符号一个都不能少而且是英文的），然后“确定”"><a href="#重点-在变量值的开始处，找到C-在C-添加这段变量-JAVA-HOME-bin-JAVA-HOME-jre-bin-（注意前后的符号一个都不能少而且是英文的），然后“确定”" class="headerlink" title="重点 在变量值的开始处，找到C: ,在C: 添加这段变量 ;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin; （注意前后的符号一个都不能少而且是英文的），然后“确定”"></a><strong>重点</strong> 在变量值的开始处，找到C: ,在C: 添加这段变量 ;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin; （注意前后的符号一个都不能少而且是英文的），然后“确定”</h2><p><img data-src="/images/javac/8.jpg" alt=""> </p><h2 id="编辑完后有两个确定要按"><a href="#编辑完后有两个确定要按" class="headerlink" title="编辑完后有两个确定要按"></a>编辑完后有两个确定要按</h2><p><img data-src="/images/javac/9.jpg" alt=""><br><img data-src="/images/javac/10.jpg" alt=""></p><h2 id="接下来测试时否安装成功，win-R-然后输入CMD，进入命令提示符”javac”"><a href="#接下来测试时否安装成功，win-R-然后输入CMD，进入命令提示符”javac”" class="headerlink" title="接下来测试时否安装成功，win+R ,然后输入CMD，进入命令提示符”javac”"></a>接下来测试时否安装成功，win+R ,然后输入CMD，进入命令提示符”javac”</h2><p><img data-src="/images/javac/11.jpg" alt=""></p><h1 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h1><ul><li>其中关键的一步是把<code>PATH</code>里的<code>jdk</code>和<code>jre</code>路径放在<code>PATH</code>列表的<strong>最前面</strong>，这样cmd运行<code>javac</code>时才能先检测到<code>JAVA_HOME</code>系列的路径</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在上学期安装好Java后，根据网上的教程配置了环境变量，在cmd里运行”java”成功，而运行”javac”出现“&lt;em&gt;不是内部或外部命令，也不是可运行的程序或批处理文件&lt;/em&gt;”的提示。&lt;br&gt;经过了一番苦苦的寻找、测试，终于在百度经验的一篇找到了答案：
    
    </summary>
    
      <category term="Java学习笔记" scheme="http://0202zc.github.io/categories/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java学习" scheme="http://0202zc.github.io/tags/Java%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 3.6 模拟登录学校教务系统获取四六级成绩</title>
    <link href="http://0202zc.github.io/2018/05/15/Python-3-6-%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95%E5%AD%A6%E6%A0%A1%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E8%8E%B7%E5%8F%96%E5%9B%9B%E5%85%AD%E7%BA%A7%E6%88%90%E7%BB%A9/"/>
    <id>http://0202zc.github.io/2018/05/15/Python-3-6-模拟登录学校教务系统获取四六级成绩/</id>
    <published>2018-05-15T12:43:26.000Z</published>
    <updated>2020-01-19T03:01:34.637Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>本程序模拟登录正方教务系统获取本人四六级成绩，并将表格内容写入本地表格。<a id="more"></a></p><ul><li>由于正方网页的每一项都需要cookie来进行访问，在用Chrome单独打开子页面时，网页会直接跳到登录前界面。在用调试查看了post后，发现cookie消失了；但是直接从网页上打开子网页可以访问。所以在登录时就要保存登录信息cookie。</li><li>因为个人技术问题，这一段代码是我从网上找的，然后修改使其能访问我们学校的网页，而且现在还不能完成验证码自动识别功能，请各位大佬见谅！</li></ul><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> html.parser <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x = []</span><br><span class="line">state = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Scraper</span><span class="params">(HTMLParser)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_starttag</span><span class="params">(self, tag, attrs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> tag == <span class="string">'img'</span>:  <span class="comment"># 验证码</span></span><br><span class="line">            attrs = dict(attrs)</span><br><span class="line">            <span class="keyword">if</span>(attrs.__contains__(<span class="string">'id'</span>)):</span><br><span class="line">                x.append(attrs[<span class="string">"src"</span>])</span><br><span class="line">        <span class="keyword">if</span> tag == <span class="string">'input'</span>:  <span class="comment"># viewstate</span></span><br><span class="line">            attrs = dict(attrs)</span><br><span class="line">            <span class="keyword">if</span> attrs.__contains__(<span class="string">'name'</span>):</span><br><span class="line">                <span class="keyword">if</span> attrs[<span class="string">'name'</span>] == <span class="string">'__VIEWSTATE'</span>:</span><br><span class="line">                    state.append(attrs[<span class="string">'value'</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">webpage = requests.get(url=<span class="string">"http://202.199.155.35/(qftqpd452cwggh55jlgisyuc)/default2.aspx"</span>)</span><br><span class="line">Cookie = webpage.cookies  <span class="comment"># 获取网页cookies</span></span><br><span class="line">date = webpage.text</span><br><span class="line">parser = Scraper()</span><br><span class="line">parser.feed(date)</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0;  TheWorld 7)'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DstDir = os.getcwd()</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    url = <span class="string">"http://202.199.155.35/(qftqpd452cwggh55jlgisyuc)/CheckCode.aspx"</span>  <span class="comment"># 验证码所在连接</span></span><br><span class="line">    pic = requests.get(url, cookies=Cookie, headers=headers)</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(<span class="string">r''</span>+DstDir+<span class="string">'\\CheckCode.jpg'</span>):</span><br><span class="line">        os.remove(<span class="string">r''</span>+DstDir+<span class="string">'\\CheckCode.jpg'</span>)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">r''</span>+DstDir+<span class="string">'\\CheckCode.jpg'</span>, <span class="string">'wb'</span>)<span class="keyword">as</span> f:</span><br><span class="line">        f.write(pic.content)</span><br><span class="line">        f.close()</span><br><span class="line">    username = input(<span class="string">"输入用户名: "</span>)</span><br><span class="line">    password = input(<span class="string">"输入密码："</span>)</span><br><span class="line"></span><br><span class="line">    os.startfile(<span class="string">r''</span>+DstDir+<span class="string">'\\CheckCode.jpg'</span>)</span><br><span class="line">    print(<span class="string">"验证码在"</span>+DstDir+<span class="string">"\\CheckCode.jpg"</span>)</span><br><span class="line">    ycode = input(<span class="string">"输入验证码: "</span>)</span><br><span class="line"></span><br><span class="line">    payload = &#123;</span><br><span class="line">        <span class="string">'__VIEWSTATE'</span>: state[<span class="number">0</span>],</span><br><span class="line">        <span class="string">'txtUserName'</span>: username,</span><br><span class="line">        <span class="string">'TextBox2'</span>: password,</span><br><span class="line">        <span class="string">'txtSecretCode'</span>: ycode,</span><br><span class="line">        <span class="string">'RadioButtonList1'</span>: <span class="string">'%D1%A7%C9%FA'</span>,</span><br><span class="line">        <span class="string">'Button1'</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">'lbLanguage'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'hidPdrs'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'hidsc'</span>: <span class="string">''</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    Log_in = <span class="string">r"http://202.199.155.35/(qftqpd452cwggh55jlgisyuc)/default2.aspx"</span></span><br><span class="line"></span><br><span class="line">    r = requests.post(url=Log_in, data=payload,</span><br><span class="line">                      headers=headers, cookies=Cookie)</span><br><span class="line">    <span class="comment"># 用正则算了</span></span><br><span class="line">    pat = <span class="string">r'&lt;title&gt;(.*?)&lt;/title&gt;'</span>  <span class="comment"># 获取标题的正则表达式</span></span><br><span class="line">    x = re.findall(pat, r.text)</span><br><span class="line">    <span class="keyword">if</span>(x[<span class="number">0</span>] == <span class="string">"欢迎使用正方教务管理系统！请登录"</span>):</span><br><span class="line">        print(<span class="string">"登陆失败"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"登陆成功"</span>)</span><br><span class="line">        <span class="comment"># 抓一下名字</span></span><br><span class="line">        catch = <span class="string">'&lt;span id="xhxm"&gt;(.*?)&lt;/span&gt;&lt;/em&gt;'</span></span><br><span class="line">        name = re.findall(catch, r.text)</span><br><span class="line">        name = name[<span class="number">0</span>]</span><br><span class="line">        name = name[:<span class="number">-2</span>]</span><br><span class="line">        print(name)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">name = str(name).replace(<span class="string">r'\x'</span>, <span class="string">'%'</span>)  <span class="comment"># 扩大适用性</span></span><br><span class="line">name = name.upper()</span><br><span class="line">name = name[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">lheaders = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'http://202.199.155.35/(qftqpd452cwggh55jlgisyuc)/xs_main.aspx?xh='</span>+username  <span class="comment"># 扩大适用性</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html = requests.get(<span class="string">"http://202.199.155.35/(qftqpd452cwggh55jlgisyuc)/xsdjkscx.aspx?xh="</span>+username +</span><br><span class="line">                    <span class="string">"&amp;xm="</span>+name+<span class="string">"&amp;gnmkdm=N121606"</span>, cookies=Cookie, headers=lheaders)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后处理成绩信息</span></span><br><span class="line">selectall = <span class="string">r'&lt;td&gt;(.*?)&lt;/td&gt;'</span>*<span class="number">10</span></span><br><span class="line">result = re.findall(selectall, html.text)</span><br><span class="line">xm = result[<span class="number">0</span>]  <span class="comment"># 项目分离</span></span><br><span class="line">forma = []</span><br><span class="line">csvfile = open(DstDir+<span class="string">'\\'</span>+name+<span class="string">'的历年英语等级考试.csv'</span>, <span class="string">'w'</span>, newline=<span class="string">''</span>)</span><br><span class="line">writer = csv.writer(csvfile)</span><br><span class="line">temp = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    forma.append(<span class="string">''</span>)  <span class="comment"># 17位的数据存放处理好的数据</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> result:</span><br><span class="line">        temp = format(<span class="string">"% -15s"</span> % str(item[index]).strip())</span><br><span class="line">        forma[index] += temp</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> forma:</span><br><span class="line">    print(each)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num, item <span class="keyword">in</span> enumerate(result):</span><br><span class="line">    <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(item):  <span class="comment"># 处理下result里面的无规则数据</span></span><br><span class="line">        <span class="keyword">if</span> value == <span class="string">" "</span>:</span><br><span class="line">            result[num][index] = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> result:</span><br><span class="line">    writer.writerow(item)</span><br><span class="line">csvfile.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.path.exists(DstDir+<span class="string">"\\CheckCode.jpg"</span>):</span><br><span class="line">        <span class="comment">#删除文件</span></span><br><span class="line">        os.remove(DstDir+<span class="string">"\\CheckCode.jpg"</span>)</span><br><span class="line">input(<span class="string">"爬虫完成,结果存在"</span>+DstDir+<span class="string">"\\"</span>+name+<span class="string">"的历年英语等级考试.csv文件下"</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;本程序模拟登录正方教务系统获取本人四六级成绩，并将表格内容写入本地表格。
    
    </summary>
    
      <category term="Python学习" scheme="http://0202zc.github.io/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="网络爬虫" scheme="http://0202zc.github.io/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>用itchat库给好友发微信消息</title>
    <link href="http://0202zc.github.io/2018/05/15/%E7%94%A8itchat%E5%BA%93%E7%BB%99%E5%A5%BD%E5%8F%8B%E5%8F%91%E5%BE%AE%E4%BF%A1%E6%B6%88%E6%81%AF/"/>
    <id>http://0202zc.github.io/2018/05/15/用itchat库给好友发微信消息/</id>
    <published>2018-05-14T23:33:10.000Z</published>
    <updated>2020-01-19T03:00:53.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>itchat是一个开源的微信个人号接口，使用python调用微信从未如此简单。<br>微信登录可以通过第三方登录来实现，即网页登录。所以我们可以直接通过调用接口（使用itchat）来实现。<br>详细查看微信网页第三方登录原理：<a href="https://www.cnblogs.com/lhat/p/6113803.html" target="_blank" rel="noopener">https://www.cnblogs.com/lhat/p/6113803.html</a><br><a id="more"></a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>可以通过本命令安装itchat：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install itchat</span><br></pre></td></tr></table></figure></p><h1 id="简单入门实例"><a href="#简单入门实例" class="headerlink" title="简单入门实例"></a>简单入门实例</h1><p>有了itchat，如果你想要给文件传输助手发一条信息，只需要这样：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"></span><br><span class="line">itchat.auto_login()</span><br><span class="line"></span><br><span class="line">itchat.send(<span class="string">'Hello, filehelper'</span>, toUserName=<span class="string">'filehelper'</span>)</span><br></pre></td></tr></table></figure></p><p>如果你想要回复发给自己的文本消息，只需要这样：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"></span><br><span class="line"><span class="meta">@itchat.msg_register(itchat.content.TEXT)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_reply</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> msg.text</span><br><span class="line"></span><br><span class="line">itchat.auto_login()</span><br><span class="line">itchat.run()</span><br></pre></td></tr></table></figure></p><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight python"><figcaption><span>消息发送</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf8</span></span><br><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">itchat.auto_login(hotReload=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">friend = input(<span class="string">'请输入好友昵称：'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 想给谁发信息，先查找到这个朋友,name后填微信备注即可,deepin测试成功</span></span><br><span class="line">users = itchat.search_friends(name=(<span class="string">u''</span>+str(friend)))</span><br><span class="line"><span class="comment"># 获取好友全部信息,返回一个列表,列表内是一个字典</span></span><br><span class="line"><span class="comment"># print(users)</span></span><br><span class="line"><span class="comment"># 获取`UserName`,用于发送消息</span></span><br><span class="line">userName = users[<span class="number">0</span>][<span class="string">'UserName'</span>]</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">True</span>):</span><br><span class="line">    a = input(<span class="string">"Input: "</span>)</span><br><span class="line">    itchat.send(str(a), toUserName=userName)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;itchat是一个开源的微信个人号接口，使用python调用微信从未如此简单。&lt;br&gt;微信登录可以通过第三方登录来实现，即网页登录。所以我们可以直接通过调用接口（使用itchat）来实现。&lt;br&gt;详细查看微信网页第三方登录原理：&lt;a href=&quot;https://www.cnblogs.com/lhat/p/6113803.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/lhat/p/6113803.html&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Python学习" scheme="http://0202zc.github.io/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="http://0202zc.github.io/tags/Python/"/>
    
      <category term="微信" scheme="http://0202zc.github.io/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>Python 3.6 模拟登录学校跑操系统获取跑操信息</title>
    <link href="http://0202zc.github.io/2018/05/14/Python-3-6-%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95%E8%8E%B7%E5%8F%96%E8%B7%91%E6%93%8D%E4%BF%A1%E6%81%AF/"/>
    <id>http://0202zc.github.io/2018/05/14/Python-3-6-模拟登录获取跑操信息/</id>
    <published>2018-05-14T04:00:32.000Z</published>
    <updated>2020-01-19T03:01:30.269Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>本程序通过模拟登录大连大学智慧体育云获取数据<a id="more"></a><br>该程序要用到requests, BeautifulSoup, re, html.parser等库<br>使用session的post，将用户的数据传给服务器以登录。session可以将用户登录的cookie保存，从而得以进行访问其它网页。<br>BeautifulSoup获取网页数据，并将获取的数据打印在屏幕上。<br>因为学生默认密码为”111111”，所以改过密码的学生无法登录其账号，本程序将其跳过</p><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight python"><figcaption><span>跑操爬虫</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> msvcrt</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> html.parser <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line">login_data = &#123;<span class="string">'StudentNo'</span>: <span class="string">'****'</span>, <span class="string">'Pwd'</span>: <span class="string">'111111'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    i = <span class="number">16422001</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    count1 = <span class="number">0</span></span><br><span class="line">    tplt = <span class="string">"&#123;0:^10&#125;\t&#123;1:&#123;3&#125;^6&#125;\t&#123;2:^4&#125;"</span></span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"\n------------------信息学院16级跑操情况------------------n"</span>)</span><br><span class="line">    print(tplt.format(<span class="string">"学号"</span>, <span class="string">"姓名"</span>, <span class="string">"跑操次数"</span>, chr(<span class="number">12288</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= <span class="number">16429060</span>):</span><br><span class="line">        <span class="keyword">if</span>(count1 &gt; <span class="number">70</span>):</span><br><span class="line">            i+=<span class="number">930</span></span><br><span class="line">            count1=<span class="number">0</span></span><br><span class="line">        login_data[<span class="string">'StudentNo'</span>] = str(i)</span><br><span class="line">        response = session.post(<span class="string">"http://isscp.dlu.edu.cn/User/UserLogin"</span>, data=login_data)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"true"</span> <span class="keyword">in</span> response.text):</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            count1 += <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        res = session.get(<span class="string">"http://isscp.dlu.edu.cn/Movement/Sign?dc=30&amp;ds=0"</span>)</span><br><span class="line">        res1 = session.get(<span class="string">"http://isscp.dlu.edu.cn/My/Index"</span>)</span><br><span class="line"></span><br><span class="line">        soup = BeautifulSoup(res.text, <span class="string">"html.parser"</span>)</span><br><span class="line">        soup1 = BeautifulSoup(res1.text, <span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line">        text = soup.find(<span class="string">'p'</span>, <span class="string">'data_p_two'</span>)</span><br><span class="line">        text1 = soup1.find(<span class="string">'span'</span>, <span class="string">'my_row_right_name'</span>)</span><br><span class="line">        text2 = soup1.find(<span class="string">'span'</span>, <span class="string">'my_row_right_department'</span>)</span><br><span class="line"></span><br><span class="line">        name = text1.find(<span class="string">'p'</span>)</span><br><span class="line">        department = text2.find(<span class="string">'p'</span>)</span><br><span class="line"></span><br><span class="line">        print(tplt.format(str(i), name.text, text.text, chr(<span class="number">12288</span>)))</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">        count1 += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"\n共计"</span> + str(count) + <span class="string">"人, 按任意键退出...\n"</span>)</span><br><span class="line">    msvcrt.getch()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;本程序通过模拟登录大连大学智慧体育云获取数据
    
    </summary>
    
      <category term="Python学习" scheme="http://0202zc.github.io/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="网络爬虫" scheme="http://0202zc.github.io/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>卷积神经网络</title>
    <link href="http://0202zc.github.io/2018/05/13/%E6%88%91%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <id>http://0202zc.github.io/2018/05/13/我的测试文章/</id>
    <published>2018-05-13T14:54:12.000Z</published>
    <updated>2020-01-19T03:00:36.690Z</updated>
    
    <content type="html"><![CDATA[<ul><li>卷积神经网络（Convolutional Neural Network,CNN）是一种前馈神经网络，它的人工神经元可以响应一部分覆盖范围内的周围单元，对于大型图像处理有出色表现。 [2]  它包括卷积层(convolutional layer)和池化层(pooling layer)。<a id="more"></a><br>卷积神经网络是近年发展起来，并引起广泛重视的一种高效识别方法。20世纪60年代，Hubel和Wiesel在研究猫脑皮层中用于局部敏感和方向选择的神经元时发现其独特的网络结构可以有效地降低反馈神经网络的复杂性，继而提出了卷积神经网络（Convolutional Neural Networks-简称CNN）。现在，CNN已经成为众多科学领域的研究热点之一，特别是在模式分类领域，由于该网络避免了对图像的复杂前期预处理，可以直接输入原始图像，因而得到了更为广泛的应用。 K.Fukushima在1980年提出的新识别机是卷积神经网络的第一个实现网络。随后，更多的科研工作者对该网络进行了改进。其中，具有代表性的研究成果是Alexander和Taylor提出的“改进认知机”，该方法综合了各种改进方法的优点并避免了耗时的误差反向传播。</li><li>一般地，CNN的基本结构包括两层，其一为特征提取层，每个神经元的输入与前一层的局部接受域相连，并提取该局部的特征。一旦该局部特征被提取后，它与其它特征间的位置关系也随之确定下来；其二是特征映射层，网络的每个计算层由多个特征映射组成，每个特征映射是一个平面，平面上所有神经元的权值相等。特征映射结构采用影响函数核小的sigmoid函数作为卷积网络的激活函数，使得特征映射具有位移不变性。此外，由于一个映射面上的神经元共享权值，因而减少了网络自由参数的个数。卷积神经网络中的每一个卷积层都紧跟着一个用来求局部平均与二次提取的计算层，这种特有的两次特征提取结构减小了特征分辨率。</li><li>CNN主要用来识别位移、缩放及其他形式扭曲不变性的二维图形。由于CNN的特征检测层通过训练数据进行学习，所以在使用CNN时，避免了显式的特征抽取，而隐式地从训练数据中进行学习；再者由于同一特征映射面上的神经元权值相同，所以网络可以并行学习，这也是卷积网络相对于神经元彼此相连网络的一大优势。卷积神经网络以其局部权值共享的特殊结构在语音识别和图像处理方面有着独特的优越性，其布局更接近于实际的生物神经网络，权值共享降低了网络的复杂性，特别是多维输入向量的图像可以直接输入网络这一特点避免了特征提取和分类过程中数据重建的复杂度。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;卷积神经网络（Convolutional Neural Network,CNN）是一种前馈神经网络，它的人工神经元可以响应一部分覆盖范围内的周围单元，对于大型图像处理有出色表现。 [2]  它包括卷积层(convolutional layer)和池化层(pooling layer)。
    
    </summary>
    
    
      <category term="This is the beginning of the garden tour." scheme="http://0202zc.github.io/tags/This-is-the-beginning-of-the-garden-tour/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://0202zc.github.io/2018/05/13/hello-world/"/>
    <id>http://0202zc.github.io/2018/05/13/hello-world/</id>
    <published>2018-05-13T14:40:29.617Z</published>
    <updated>2020-01-19T03:01:00.275Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
