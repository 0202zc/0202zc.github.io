<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZC Liang 的博客</title>
  
  <subtitle>Where there is a will, there is a way.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://0202zc.github.io/"/>
  <updated>2018-05-14T11:13:27.374Z</updated>
  <id>http://0202zc.github.io/</id>
  
  <author>
    <name>0202zc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 3.6 模拟登陆学校跑操系统获取跑操信息</title>
    <link href="http://0202zc.github.io/2018/05/14/Python-3-6%E6%A8%A1%E6%8B%9F%E7%99%BB%E9%99%86%E5%A4%A7%E8%BF%9E%E5%A4%A7%E5%AD%A6%E8%B7%91%E6%93%8D%E7%B3%BB%E7%BB%9F%E8%8E%B7%E5%8F%96%E8%B7%91%E6%93%8D%E4%BF%A1%E6%81%AF/"/>
    <id>http://0202zc.github.io/2018/05/14/Python-3-6模拟登陆大连大学跑操系统获取跑操信息/</id>
    <published>2018-05-14T04:00:32.000Z</published>
    <updated>2018-05-14T11:13:27.374Z</updated>
    
    <content type="html"><![CDATA[<p>该程序要用到requests, BeautifulSoup, re, html.parser等库</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>本程序通过模拟登录获取数据<br>使用session的post，将用户的数据传给服务器以登录。session可以将用户登录的cookie保存，从而得以进行访问其它网页。<br>BeautifulSoup获取网页数据，并将获取的数据打印在屏幕上。<br>因为学生默认密码为”111111”，所以改过密码的学生无法登录其账号，本程序将其跳过</p><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight python"><figcaption><span>跑操爬虫</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> msvcrt</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> html.parser <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line">login_data = &#123;<span class="string">'StudentNo'</span>: <span class="string">'****'</span>, <span class="string">'Pwd'</span>: <span class="string">'111111'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    i = <span class="number">16422001</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    count1 = <span class="number">0</span></span><br><span class="line">    tplt = <span class="string">"&#123;0:^10&#125;\t&#123;1:&#123;3&#125;^6&#125;\t&#123;2:^4&#125;"</span></span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"\n------------------信息学院16级跑操情况------------------n"</span>)</span><br><span class="line">    print(tplt.format(<span class="string">"学号"</span>, <span class="string">"姓名"</span>, <span class="string">"跑操次数"</span>, chr(<span class="number">12288</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= <span class="number">16429060</span>):</span><br><span class="line">        <span class="keyword">if</span>(count1 &gt; <span class="number">70</span>):</span><br><span class="line">            i+=<span class="number">930</span></span><br><span class="line">            count1=<span class="number">0</span></span><br><span class="line">        login_data[<span class="string">'StudentNo'</span>] = str(i)</span><br><span class="line">        response = session.post(<span class="string">"http://isscp.dlu.edu.cn/User/UserLogin"</span>, data=login_data)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"true"</span> <span class="keyword">in</span> response.text):</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            count1 += <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        res = session.get(<span class="string">"http://isscp.dlu.edu.cn/Movement/Sign?dc=30&amp;ds=0"</span>)</span><br><span class="line">        res1 = session.get(<span class="string">"http://isscp.dlu.edu.cn/My/Index"</span>)</span><br><span class="line"></span><br><span class="line">        soup = BeautifulSoup(res.text, <span class="string">"html.parser"</span>)</span><br><span class="line">        soup1 = BeautifulSoup(res1.text, <span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line">        text = soup.find(<span class="string">'p'</span>, <span class="string">'data_p_two'</span>)</span><br><span class="line">        text1 = soup1.find(<span class="string">'span'</span>, <span class="string">'my_row_right_name'</span>)</span><br><span class="line">        text2 = soup1.find(<span class="string">'span'</span>, <span class="string">'my_row_right_department'</span>)</span><br><span class="line"></span><br><span class="line">        name = text1.find(<span class="string">'p'</span>)</span><br><span class="line">        department = text2.find(<span class="string">'p'</span>)</span><br><span class="line"></span><br><span class="line">        print(tplt.format(str(i), name.text, text.text, chr(<span class="number">12288</span>)))</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">        count1 += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"\n共计"</span> + str(count) + <span class="string">"人, 按任意键退出...\n"</span>)</span><br><span class="line">    msvcrt.getch()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;该程序要用到requests, BeautifulSoup, re, html.parser等库&lt;/p&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;本程序通过模拟登录获取数据&lt;
      
    
    </summary>
    
      <category term="Python爬虫" scheme="http://0202zc.github.io/categories/Python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="网络爬虫" scheme="http://0202zc.github.io/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>我的测试文章</title>
    <link href="http://0202zc.github.io/2018/05/13/%E6%88%91%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <id>http://0202zc.github.io/2018/05/13/我的测试文章/</id>
    <published>2018-05-13T14:54:12.000Z</published>
    <updated>2018-05-14T03:55:17.565Z</updated>
    
    <content type="html"><![CDATA[<p>卷积神经网络（Convolutional Neural Network,CNN）是一种前馈神经网络，它的人工神经元可以响应一部分覆盖范围内的周围单元，对于大型图像处理有出色表现。 [2]  它包括卷积层(convolutional layer)和池化层(pooling layer)。<br>卷积神经网络是近年发展起来，并引起广泛重视的一种高效识别方法。20世纪60年代，Hubel和Wiesel在研究猫脑皮层中用于局部敏感和方向选择的神经元时发现其独特的网络结构可以有效地降低反馈神经网络的复杂性，继而提出了卷积神经网络（Convolutional Neural Networks-简称CNN）。现在，CNN已经成为众多科学领域的研究热点之一，特别是在模式分类领域，由于该网络避免了对图像的复杂前期预处理，可以直接输入原始图像，因而得到了更为广泛的应用。 K.Fukushima在1980年提出的新识别机是卷积神经网络的第一个实现网络。随后，更多的科研工作者对该网络进行了改进。其中，具有代表性的研究成果是Alexander和Taylor提出的“改进认知机”，该方法综合了各种改进方法的优点并避免了耗时的误差反向传播。<br>一般地，CNN的基本结构包括两层，其一为特征提取层，每个神经元的输入与前一层的局部接受域相连，并提取该局部的特征。一旦该局部特征被提取后，它与其它特征间的位置关系也随之确定下来；其二是特征映射层，网络的每个计算层由多个特征映射组成，每个特征映射是一个平面，平面上所有神经元的权值相等。特征映射结构采用影响函数核小的sigmoid函数作为卷积网络的激活函数，使得特征映射具有位移不变性。此外，由于一个映射面上的神经元共享权值，因而减少了网络自由参数的个数。卷积神经网络中的每一个卷积层都紧跟着一个用来求局部平均与二次提取的计算层，这种特有的两次特征提取结构减小了特征分辨率。<br>CNN主要用来识别位移、缩放及其他形式扭曲不变性的二维图形。由于CNN的特征检测层通过训练数据进行学习，所以在使用CNN时，避免了显式的特征抽取，而隐式地从训练数据中进行学习；再者由于同一特征映射面上的神经元权值相同，所以网络可以并行学习，这也是卷积网络相对于神经元彼此相连网络的一大优势。卷积神经网络以其局部权值共享的特殊结构在语音识别和图像处理方面有着独特的优越性，其布局更接近于实际的生物神经网络，权值共享降低了网络的复杂性，特别是多维输入向量的图像可以直接输入网络这一特点避免了特征提取和分类过程中数据重建的复杂度。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;卷积神经网络（Convolutional Neural Network,CNN）是一种前馈神经网络，它的人工神经元可以响应一部分覆盖范围内的周围单元，对于大型图像处理有出色表现。 [2]  它包括卷积层(convolutional layer)和池化层(pooling la
      
    
    </summary>
    
    
      <category term="This is the beginning of the garden tour." scheme="http://0202zc.github.io/tags/This-is-the-beginning-of-the-garden-tour/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://0202zc.github.io/2018/05/13/hello-world/"/>
    <id>http://0202zc.github.io/2018/05/13/hello-world/</id>
    <published>2018-05-13T14:40:29.617Z</published>
    <updated>2018-05-14T10:35:53.203Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
